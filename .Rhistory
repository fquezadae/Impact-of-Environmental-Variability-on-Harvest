names_to = "variable",
values_to = "value")
ggplot(biomass_harvest_long, aes(x = year, y = value, color = variable)) +
geom_line(size = 1, na.rm = TRUE) +
# geom_point(size = 2, na.rm = TRUE) +
# geom_smooth(se = FALSE, span = 0.4, method = "loess", na.rm = TRUE) + # <- smoothing
facet_wrap(~species, scales = "free_y") +
labs(x = "Year", y = "Value (tons)", color = "Variable") +
scale_color_manual(values = c("biomass" = "darkgreen", "harvest" = "steelblue")) +
theme_minimal() +
theme(legend.position = "top")
library(tidyverse)
library(systemfit)
library(janitor)
# --- 1. Limpieza y preparación de datos ----
biomass_harvest_wide <- biomass_harvest %>%
mutate(species = gsub("[^A-Za-z0-9]", "", tolower(species))) %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(biomass_t1 = lead(biomass)) %>%
ungroup() %>%
pivot_wider(
names_from = species,
values_from = c(biomass, harvest, biomass_t1),
names_sep = "_"
) %>%
janitor::clean_names()
# Biomasa total sin cosecha
biomass_harvest_wide <- biomass_harvest_wide %>%
mutate(
biomass_t1_sardine_noharvest      = biomass_t1_sardine + harvest_sardine,
biomass_t1_anchoveta_noharvest    = biomass_t1_anchoveta + harvest_anchoveta,
biomass_t1_jackmackerel_noharvest = biomass_t1_jackmackerelintrapolated + harvest_jackmackerelintrapolated
)
# --- 2. Subconjunto limpio y escalado ----
sur_data <- biomass_harvest_wide %>%
select(
year,
biomass_t1_sardine_noharvest,
biomass_t1_anchoveta_noharvest,
biomass_t1_jackmackerel_noharvest,
biomass_sardine,
biomass_anchoveta,
biomass_jackmackerelintrapolated
) %>%
drop_na() %>%
mutate(across(-year, scale))   # Escalar todo menos año
# --- 3. Definición de ecuaciones ----
eq_sardine <- biomass_t1_sardine_noharvest ~
biomass_sardine +
biomass_sardine:biomass_anchoveta +
biomass_sardine:biomass_jackmackerelintrapolated
eq_anchoveta <- biomass_t1_anchoveta_noharvest ~
biomass_sardine +
biomass_anchoveta:biomass_sardine +
biomass_anchoveta:biomass_jackmackerelintrapolated
eq_jack <- biomass_t1_jackmackerel_noharvest ~
biomass_jackmackerelintrapolated +
biomass_jackmackerelintrapolated:biomass_sardine +
biomass_jackmackerelintrapolated:biomass_anchoveta
# --- 4. Estimación SUR ----
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta,
jackmackerel = eq_jack
),
data = sur_data,
method = "SUR"
)
summary(fit_sur)
# ## 3) Matrices de diseño por ecuación (con las MISMAS filas que usó el SUR)
# X1 <- model.matrix(eq1, data = sur_data)
# X2 <- model.matrix(eq2, data = sur_data)
#
# ## 4) Bloque diagonal de X y vector de residuos apilado
# X_blk <- as.matrix(bdiag(X1, X2))
# u1 <- residuals(fit_sur)$sardine
# u2 <- residuals(fit_sur)$anchoveta
# u  <- c(u1, u2)
#
# ## 5) Sandwich White a nivel del sistema
# # bread = (X'X)^(-1) ; meat = X' diag(u^2) X
# bread <- solve(crossprod(X_blk))
# Omega <- Diagonal(x = as.numeric(u^2))
# meat  <- crossprod(X_blk, Omega %*% X_blk)
# vcov_white <- bread %*% meat %*% bread
#
# ## 6) Tabla con EE robustos, z y p-valor
# b     <- coef(fit_sur)
# seR   <- sqrt(diag(vcov_white))
# zval  <- b / seR
# pval  <- 2 * pnorm(abs(zval), lower.tail = FALSE)
#
# robust_table <- cbind(Estimate = b, `Robust SE` = seR, `z value` = zval, `Pr(>|z|)` = pval)
# round(robust_table, 4)
library(tidyverse)
library(systemfit)
library(janitor)
# --- 1. Limpieza y preparación de datos ----
biomass_harvest_wide <- biomass_harvest %>%
mutate(species = gsub("[^A-Za-z0-9]", "", tolower(species))) %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(biomass_t1 = lead(biomass)) %>%
ungroup() %>%
pivot_wider(
names_from = species,
values_from = c(biomass, harvest, biomass_t1),
names_sep = "_"
) %>%
janitor::clean_names()
# Biomasa total sin cosecha
biomass_harvest_wide <- biomass_harvest_wide %>%
mutate(
biomass_t1_sardine_noharvest      = biomass_t1_sardine + harvest_sardine,
biomass_t1_anchoveta_noharvest    = biomass_t1_anchoveta + harvest_anchoveta,
biomass_t1_jackmackerel_noharvest = biomass_t1_jackmackerelintrapolated + harvest_jackmackerelintrapolated
)
# --- 2. Subconjunto limpio y escalado ----
sur_data <- biomass_harvest_wide %>%
select(
year,
biomass_t1_sardine_noharvest,
biomass_t1_anchoveta_noharvest,
biomass_t1_jackmackerel_noharvest,
biomass_sardine,
biomass_anchoveta,
biomass_jackmackerelintrapolated
) %>%
drop_na() %>%
mutate(across(-year, scale))   # Escalar todo menos año
# --- 3. Definición de ecuaciones ----
eq_sardine <- biomass_t1_sardine_noharvest ~
biomass_sardine +
biomass_anchoveta +
biomass_jackmackerelintrapolated +
biomass_sardine:biomass_anchoveta +
biomass_sardine:biomass_jackmackerelintrapolated
eq_anchoveta <- biomass_t1_anchoveta_noharvest ~
biomass_anchoveta +
biomass_sardine +
biomass_jackmackerelintrapolated +
biomass_anchoveta:biomass_sardine +
biomass_anchoveta:biomass_jackmackerelintrapolated
eq_jack <- biomass_t1_jackmackerel_noharvest ~
biomass_jackmackerelintrapolated +
biomass_sardine +
biomass_anchoveta +
biomass_jackmackerelintrapolated:biomass_sardine +
biomass_jackmackerelintrapolated:biomass_anchoveta
# --- 4. Estimación SUR ----
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta,
jackmackerel = eq_jack
),
data = sur_data,
method = "SUR"
)
summary(fit_sur)
# ## 3) Matrices de diseño por ecuación (con las MISMAS filas que usó el SUR)
# X1 <- model.matrix(eq1, data = sur_data)
# X2 <- model.matrix(eq2, data = sur_data)
#
# ## 4) Bloque diagonal de X y vector de residuos apilado
# X_blk <- as.matrix(bdiag(X1, X2))
# u1 <- residuals(fit_sur)$sardine
# u2 <- residuals(fit_sur)$anchoveta
# u  <- c(u1, u2)
#
# ## 5) Sandwich White a nivel del sistema
# # bread = (X'X)^(-1) ; meat = X' diag(u^2) X
# bread <- solve(crossprod(X_blk))
# Omega <- Diagonal(x = as.numeric(u^2))
# meat  <- crossprod(X_blk, Omega %*% X_blk)
# vcov_white <- bread %*% meat %*% bread
#
# ## 6) Tabla con EE robustos, z y p-valor
# b     <- coef(fit_sur)
# seR   <- sqrt(diag(vcov_white))
# zval  <- b / seR
# pval  <- 2 * pnorm(abs(zval), lower.tail = FALSE)
#
# robust_table <- cbind(Estimate = b, `Robust SE` = seR, `z value` = zval, `Pr(>|z|)` = pval)
# round(robust_table, 4)
library(tidyverse)
library(systemfit)
library(janitor)
# --- 1. Limpieza y preparación de datos ----
biomass_harvest_wide <- biomass_harvest %>%
mutate(species = gsub("[^A-Za-z0-9]", "", tolower(species))) %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(biomass_t1 = lead(biomass)) %>%
ungroup() %>%
pivot_wider(
names_from = species,
values_from = c(biomass, harvest, biomass_t1),
names_sep = "_"
) %>%
janitor::clean_names()
# Biomasa total sin cosecha
biomass_harvest_wide <- biomass_harvest_wide %>%
mutate(
biomass_t1_sardine_noharvest      = biomass_t1_sardine + harvest_sardine,
biomass_t1_anchoveta_noharvest    = biomass_t1_anchoveta + harvest_anchoveta,
biomass_t1_jackmackerel_noharvest = biomass_t1_jackmackerelintrapolated + harvest_jackmackerelintrapolated
)
# --- 2. Subconjunto limpio y escalado ----
sur_data <- biomass_harvest_wide %>%
select(
year,
biomass_t1_sardine_noharvest,
biomass_t1_anchoveta_noharvest,
biomass_t1_jackmackerel_noharvest,
biomass_sardine,
biomass_anchoveta,
biomass_jackmackerelintrapolated
) %>%
drop_na()    # Escalar todo menos año
# --- 3. Definición de ecuaciones ----
eq_sardine <- biomass_t1_sardine_noharvest ~
biomass_sardine +
biomass_anchoveta +
biomass_jackmackerelintrapolated +
biomass_sardine:biomass_anchoveta +
biomass_sardine:biomass_jackmackerelintrapolated
eq_anchoveta <- biomass_t1_anchoveta_noharvest ~
biomass_anchoveta +
biomass_sardine +
biomass_jackmackerelintrapolated +
biomass_anchoveta:biomass_sardine +
biomass_anchoveta:biomass_jackmackerelintrapolated
eq_jack <- biomass_t1_jackmackerel_noharvest ~
biomass_jackmackerelintrapolated +
biomass_sardine +
biomass_anchoveta +
biomass_jackmackerelintrapolated:biomass_sardine +
biomass_jackmackerelintrapolated:biomass_anchoveta
# --- 4. Estimación SUR ----
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta,
jackmackerel = eq_jack
),
data = sur_data,
method = "SUR"
)
summary(fit_sur)
library(tidyverse)
library(systemfit)
library(janitor)
# --- 1. Limpieza y preparación de datos ----
biomass_harvest_wide <- biomass_harvest %>%
mutate(species = gsub("[^A-Za-z0-9]", "", tolower(species))) %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(biomass_t1 = lead(biomass)) %>%
ungroup() %>%
pivot_wider(
names_from = species,
values_from = c(biomass, harvest, biomass_t1),
names_sep = "_"
) %>%
janitor::clean_names()
# Biomasa total sin cosecha
biomass_harvest_wide <- biomass_harvest_wide %>%
mutate(
biomass_t1_sardine_noharvest      = biomass_t1_sardine + harvest_sardine,
biomass_t1_anchoveta_noharvest    = biomass_t1_anchoveta + harvest_anchoveta,
biomass_t1_jackmackerel_noharvest = biomass_t1_jackmackerelintrapolated + harvest_jackmackerelintrapolated
)
# --- 2. Subconjunto limpio y escalado ----
sur_data <- biomass_harvest_wide %>%
select(
year,
biomass_t1_sardine_noharvest,
biomass_t1_anchoveta_noharvest,
biomass_t1_jackmackerel_noharvest,
biomass_sardine,
biomass_anchoveta,
biomass_jackmackerelintrapolated
) %>%
drop_na()    # Escalar todo menos año
# --- 3. Definición de ecuaciones ----
eq_sardine <- biomass_t1_sardine_noharvest ~
biomass_sardine +
biomass_anchoveta +
# biomass_jackmackerelintrapolated +
# biomass_sardine:biomass_anchoveta +
biomass_sardine:biomass_jackmackerelintrapolated
eq_anchoveta <- biomass_t1_anchoveta_noharvest ~
biomass_anchoveta +
biomass_sardine +
# biomass_jackmackerelintrapolated +
# biomass_anchoveta:biomass_sardine +
biomass_anchoveta:biomass_jackmackerelintrapolated
eq_jack <- biomass_t1_jackmackerel_noharvest ~
biomass_jackmackerelintrapolated +
biomass_sardine +
# biomass_anchoveta +
# biomass_jackmackerelintrapolated:biomass_sardine +
biomass_jackmackerelintrapolated:biomass_anchoveta
# --- 4. Estimación SUR ----
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta,
jackmackerel = eq_jack
),
data = sur_data,
method = "SUR"
)
summary(fit_sur)
# ## 3) Matrices de diseño por ecuación (con las MISMAS filas que usó el SUR)
# X1 <- model.matrix(eq1, data = sur_data)
# X2 <- model.matrix(eq2, data = sur_data)
#
# ## 4) Bloque diagonal de X y vector de residuos apilado
# X_blk <- as.matrix(bdiag(X1, X2))
# u1 <- residuals(fit_sur)$sardine
# u2 <- residuals(fit_sur)$anchoveta
# u  <- c(u1, u2)
#
# ## 5) Sandwich White a nivel del sistema
# # bread = (X'X)^(-1) ; meat = X' diag(u^2) X
# bread <- solve(crossprod(X_blk))
# Omega <- Diagonal(x = as.numeric(u^2))
# meat  <- crossprod(X_blk, Omega %*% X_blk)
# vcov_white <- bread %*% meat %*% bread
#
# ## 6) Tabla con EE robustos, z y p-valor
# b     <- coef(fit_sur)
# seR   <- sqrt(diag(vcov_white))
# zval  <- b / seR
# pval  <- 2 * pnorm(abs(zval), lower.tail = FALSE)
#
# robust_table <- cbind(Estimate = b, `Robust SE` = seR, `z value` = zval, `Pr(>|z|)` = pval)
# round(robust_table, 4)
library(tidyverse)
library(systemfit)
library(janitor)
# --- 1. Limpieza y preparación de datos ----
biomass_harvest_wide <- biomass_harvest %>%
mutate(species = gsub("[^A-Za-z0-9]", "", tolower(species))) %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(biomass_t1 = lead(biomass)) %>%
ungroup() %>%
pivot_wider(
names_from = species,
values_from = c(biomass, harvest, biomass_t1),
names_sep = "_"
) %>%
janitor::clean_names()
# Biomasa total sin cosecha
biomass_harvest_wide <- biomass_harvest_wide %>%
mutate(
biomass_t1_sardine_noharvest      = biomass_t1_sardine + harvest_sardine,
biomass_t1_anchoveta_noharvest    = biomass_t1_anchoveta + harvest_anchoveta,
biomass_t1_jackmackerel_noharvest = biomass_t1_jackmackerelintrapolated + harvest_jackmackerelintrapolated
)
# --- 2. Subconjunto limpio y escalado ----
sur_data <- biomass_harvest_wide %>%
select(
year,
biomass_t1_sardine_noharvest,
biomass_t1_anchoveta_noharvest,
biomass_t1_jackmackerel_noharvest,
biomass_sardine,
biomass_anchoveta,
biomass_jackmackerelintrapolated
) %>%
drop_na()    # Escalar todo menos año
# --- 3. Definición de ecuaciones ----
eq_sardine <- biomass_t1_sardine_noharvest ~
biomass_sardine +
# biomass_anchoveta +
# biomass_jackmackerelintrapolated +
biomass_sardine:biomass_anchoveta +
biomass_sardine:biomass_jackmackerelintrapolated
eq_anchoveta <- biomass_t1_anchoveta_noharvest ~
biomass_anchoveta +
# biomass_sardine +
# biomass_jackmackerelintrapolated +
biomass_anchoveta:biomass_sardine +
biomass_anchoveta:biomass_jackmackerelintrapolated
eq_jack <- biomass_t1_jackmackerel_noharvest ~
biomass_jackmackerelintrapolated +
# biomass_sardine +
# biomass_anchoveta +
biomass_jackmackerelintrapolated:biomass_sardine +
biomass_jackmackerelintrapolated:biomass_anchoveta
# --- 4. Estimación SUR ----
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta,
jackmackerel = eq_jack
),
data = sur_data,
method = "SUR"
)
View(env_dt)
View(biomass_harvest_wide)
env_dt_year <- env_dt %>% mutate(year = year(date))
View(env_dt_year)
env_dt_year <- env_dt %>%
mutate(year = year(date)) %>%
group_by(year) %>%
summarize(mean_sst = mean(sst, na.rm = TRUE),
mean_chl = mean(chl, na.rm = TRUE),
mean_wind = mean(speed_max, na.rm = TRUE))
View(env_dt_year)
View(biomass_harvest_wide)
View(env_dt_year)
biomass_harvest_wide <- left_join(biomass_harvest_wide, env_dt_year, by = "year")
View(biomass_harvest_wide)
# --- 1. Limpieza y preparación de datos ----
biomass_harvest_wide <- biomass_harvest %>%
mutate(species = gsub("[^A-Za-z0-9]", "", tolower(species))) %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(biomass_t1 = lead(biomass)) %>%
ungroup() %>%
pivot_wider(
names_from = species,
values_from = c(biomass, harvest, biomass_t1),
names_sep = "_"
) %>%
janitor::clean_names()
# Biomasa total sin cosecha
biomass_harvest_wide <- biomass_harvest_wide %>%
mutate(
biomass_t1_sardine_noharvest      = biomass_t1_sardine + harvest_sardine,
biomass_t1_anchoveta_noharvest    = biomass_t1_anchoveta + harvest_anchoveta,
biomass_t1_jackmackerel_noharvest = biomass_t1_jackmackerelintrapolated + harvest_jackmackerelintrapolated
)
# Obtener datos ambientales (NECESITO DESDE EL 2001!!!!!)
env_dt_year <- env_dt %>%
mutate(year = year(date)) %>%
group_by(year) %>%
summarize(sst = mean(sst, na.rm = TRUE),
chl = mean(chl, na.rm = TRUE),
wind = mean(speed_max, na.rm = TRUE))
biomass_harvest_wide <- left_join(biomass_harvest_wide, env_dt_year, by = "year")
# --- 2. Subconjunto limpio y escalado ----
sur_data <- biomass_harvest_wide %>%
select(
year,
biomass_t1_sardine_noharvest,
biomass_t1_anchoveta_noharvest,
biomass_t1_jackmackerel_noharvest,
biomass_sardine,
biomass_anchoveta,
biomass_jackmackerelintrapolated,
sst, chl, wind
) %>%
drop_na()    # Escalar todo menos año
View(sur_data)
# --- 3. Definición de ecuaciones ----
eq_sardine <- biomass_t1_sardine_noharvest ~
biomass_sardine +
# biomass_anchoveta +
# biomass_jackmackerelintrapolated +
biomass_sardine:biomass_anchoveta +
biomass_sardine:biomass_jackmackerelintrapolated +
sst + chl + wind
eq_anchoveta <- biomass_t1_anchoveta_noharvest ~
biomass_anchoveta +
# biomass_sardine +
# biomass_jackmackerelintrapolated +
biomass_anchoveta:biomass_sardine +
biomass_anchoveta:biomass_jackmackerelintrapolated  +
sst + chl + wind
eq_jack <- biomass_t1_jackmackerel_noharvest ~
biomass_jackmackerelintrapolated +
# biomass_sardine +
# biomass_anchoveta +
biomass_jackmackerelintrapolated:biomass_sardine +
biomass_jackmackerelintrapolated:biomass_anchoveta  +
sst + chl + wind
# --- 4. Estimación SUR ----
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta,
jackmackerel = eq_jack
),
data = sur_data,
method = "SUR"
)
# --- 4. Estimación SUR ----
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta,
),
data = sur_data,
method = "SUR"
)
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta
),
data = sur_data,
method = "SUR"
)
