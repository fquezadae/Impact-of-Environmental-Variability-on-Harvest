strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple  = simplify_focus_strategy(strategy_After)
) %>%
# keep only the focus categories (or rows where either side is a focus)
filter(
strategy_Before_simple %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing") |
strategy_After_simple  %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing")
) %>%
count(TIPO_FLOTA, strategy_Before_simple, strategy_After_simple, name = "n")
View(transition_counts_focus)
make_transition_plot <- function(df, fleet_label) {
if (nrow(df) == 0) {
return(ggplot() + ggtitle(paste0(fleet_label, " (no data)")))
}
p <- ggplot(df, aes(axis1 = strategy_Before_simple,
axis2 = strategy_After_simple,
y = n)) +
geom_flow(aes(fill = strategy_Before_simple),
width = 1/12, knot.pos = 0.4, alpha = 0.85) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
# left / right axis labels
scale_x_discrete(labels = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of vessels", title = fleet_label) +
theme_minimal(base_size = 10) +
theme(legend.position = "none", panel.grid = element_blank())
gb <- ggplot_build(p)
stratum_idx <- which(sapply(gb$data, function(d) "stratum" %in% names(d)))
sd <- gb$data[[stratum_idx[1]]] %>%
gb <- ggplot_build(p)
stratum_idx <- which(sapply(gb$data, function(d) "stratum" %in% names(d)))
sd <- gb$data[[stratum_idx[1]]] %>%
# compute center y for label placement (y may not exist)
mutate(y = (ymin + ymax) / 2)
make_transition_plot <- function(df, fleet_label) {
if (nrow(df) == 0) {
return(ggplot() + ggtitle(paste0(fleet_label, " (no data)")))
}
p <- ggplot(df, aes(axis1 = strategy_Before_simple,
axis2 = strategy_After_simple,
y = n)) +
geom_flow(aes(fill = strategy_Before_simple),
width = 1/12, knot.pos = 0.4, alpha = 0.85) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
# left / right axis labels
scale_x_discrete(labels = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of vessels", title = fleet_label) +
theme_minimal(base_size = 10) +
theme(legend.position = "none", panel.grid = element_blank())
# get stratum positions robustly from ggplot_build
gb <- ggplot_build(p)
stratum_idx <- which(sapply(gb$data, function(d) "stratum" %in% names(d)))
sd <- gb$data[[stratum_idx[1]]] %>%
# compute center y for label placement (y may not exist)
mutate(y = (ymin + ymax) / 2)
left_labels  <- sd %>% filter(x == 1) %>% mutate(hjust = 1, x = x - 0.05)
right_labels <- sd %>% filter(x == 2) %>% mutate(hjust = 0, x = x + 0.05)
p +
geom_text(data = left_labels,
aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.8, inherit.aes = FALSE) +
geom_text(data = right_labels,
aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.8, inherit.aes = FALSE)
}
# 5) build IND and ART plots and arrange (IND above ART)
ind_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "IND"), "Industrial (IND)")
art_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "ART"),   "Artisanal (ART)")
# Arrange vertical: IND then ART. For side-by-side use ind_plot + art_plot
ind_plot / art_plot
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
library(patchwork)   # for arranging plots; you can also use cowplot
# 1) join and keep fleet type (coalesce TIPO_FLOTA from before/after if present)
strategy_transitions <- full_join(strategy_before, strategy_after,
by = "COD_BARCO", suffix = c("_Before", "_After")) %>%
mutate(
# keep a single fleet column if it exists in either table
TIPO_FLOTA = dplyr::coalesce(TIPO_FLOTA_Before, TIPO_FLOTA_After),
# replace NA strategies with "No fishing"
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
# 2) vectorized simplify function (returns one of the focus categories)
simplify_focus_strategy <- function(strategy) {
strategy <- as.character(strategy)
sapply(strategy, function(x) {
if (is.na(x)) return(NA_character_)
if (x == "Only Sardine") return("Sardine")
if (x == "Only Anchoveta") return("Anchoveta")
if (grepl("Sardine", x) & grepl("Anchoveta", x)) return("Sardine and Anchoveta")
if (x == "No fishing") return("No fishing")
return("Other")
}, USE.NAMES = FALSE)
}
# 3) create simplified strategy columns and count transitions by fleet
transition_counts_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple  = simplify_focus_strategy(strategy_After)
) %>%
# keep only the focus categories (or rows where either side is a focus)
filter(
strategy_Before_simple %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing") |
strategy_After_simple  %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing")
) %>%
count(TIPO_FLOTA, strategy_Before_simple, strategy_After_simple, name = "n")
# Quick debug — uncomment if you want to check fleets present:
# table(transition_counts_focus$TIPO_FLOTA, useNA = "ifany")
# 4) helper to create per-fleet alluvial plot
make_transition_plot <- function(df, fleet_label) {
if (nrow(df) == 0) {
return(ggplot() + ggtitle(paste0(fleet_label, " (no data)")))
}
p <- ggplot(df, aes(axis1 = strategy_Before_simple,
axis2 = strategy_After_simple,
y = n)) +
geom_flow(aes(fill = strategy_Before_simple),
width = 1/12, knot.pos = 0.4, alpha = 0.85) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
# left / right axis labels
scale_x_discrete(labels = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of vessels", title = fleet_label) +
theme_minimal(base_size = 10) +
theme(legend.position = "none", panel.grid = element_blank())
# get stratum positions robustly from ggplot_build
gb <- ggplot_build(p)
stratum_idx <- which(sapply(gb$data, function(d) "stratum" %in% names(d)))
sd <- gb$data[[stratum_idx[1]]] %>%
# compute center y for label placement (y may not exist)
mutate(y = (ymin + ymax) / 2)
left_labels  <- sd %>% filter(x == 1) %>% mutate(hjust = 1, x = x - 0.05)
right_labels <- sd %>% filter(x == 2) %>% mutate(hjust = 0, x = x + 0.05)
p +
geom_text(data = left_labels,
aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.8, inherit.aes = FALSE) +
geom_text(data = right_labels,
aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.8, inherit.aes = FALSE)
}
# 5) build IND and ART plots and arrange (IND above ART)
ind_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "IND"), "Industrial (IND)")
art_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "ART"),   "Artisanal (ART)")
# Arrange vertical: IND then ART. For side-by-side use ind_plot + art_plot
ind_plot / art_plot
ind_plot + art_plot
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
library(patchwork)   # for arranging plots; you can also use cowplot
# 1) join and keep fleet type (coalesce TIPO_FLOTA from before/after if present)
strategy_transitions <- full_join(strategy_before, strategy_after,
by = "COD_BARCO", suffix = c("_Before", "_After")) %>%
mutate(
# keep a single fleet column if it exists in either table
TIPO_FLOTA = dplyr::coalesce(TIPO_FLOTA_Before, TIPO_FLOTA_After),
# replace NA strategies with "No fishing"
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
# 2) vectorized simplify function (returns one of the focus categories)
simplify_focus_strategy <- function(strategy) {
strategy <- as.character(strategy)
sapply(strategy, function(x) {
if (is.na(x)) return(NA_character_)
if (x == "Only Sardine") return("Sardine")
if (x == "Only Anchoveta") return("Anchoveta")
if (grepl("Sardine", x) & grepl("Anchoveta", x)) return("Sardine and Anchoveta")
if (x == "No fishing") return("No fishing")
return("Other")
}, USE.NAMES = FALSE)
}
# 3) create simplified strategy columns and count transitions by fleet
transition_counts_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple  = simplify_focus_strategy(strategy_After)
) %>%
# keep only the focus categories (or rows where either side is a focus)
filter(
strategy_Before_simple %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing") |
strategy_After_simple  %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing")
) %>%
count(TIPO_FLOTA, strategy_Before_simple, strategy_After_simple, name = "n")
transition_counts_focus2 <- transition_counts_focus %>%
mutate(
strategy_Before_axis = paste0(strategy_Before_simple, "_before"),
strategy_After_axis  = paste0(strategy_After_simple, "_after")
)
# Quick debug — uncomment if you want to check fleets present:
# table(transition_counts_focus$TIPO_FLOTA, useNA = "ifany")
# 4) helper to create per-fleet alluvial plot
make_transition_plot <- function(df, fleet_label) {
if (nrow(df) == 0) {
return(ggplot() + ggtitle(paste0(fleet_label, " (no data)")))
}
p <- ggplot(df, aes(axis1 = strategy_Before_simple,
axis2 = strategy_After_simple,
y = n)) +
geom_flow(aes(fill = strategy_Before_simple),
width = 1/12, knot.pos = 0.4, alpha = 0.85) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
# left / right axis labels
scale_x_discrete(labels = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of vessels", title = fleet_label) +
theme_minimal(base_size = 10) +
theme(legend.position = "none", panel.grid = element_blank())
# get stratum positions robustly from ggplot_build
gb <- ggplot_build(p)
stratum_idx <- which(sapply(gb$data, function(d) "stratum" %in% names(d)))
sd <- gb$data[[stratum_idx[1]]] %>%
# compute center y for label placement (y may not exist)
mutate(y = (ymin + ymax) / 2)
left_labels  <- sd %>% filter(x == 1) %>% mutate(hjust = 1, x = x - 0.05)
right_labels <- sd %>% filter(x == 2) %>% mutate(hjust = 0, x = x + 0.05)
p +
geom_text(data = left_labels,
aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.8, inherit.aes = FALSE) +
geom_text(data = right_labels,
aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.8, inherit.aes = FALSE)
}
# 5) build IND and ART plots and arrange (IND above ART)
ind_plot <- make_transition_plot(filter(transition_counts_focus2, TIPO_FLOTA == "IND"), "Industrial (IND)")
art_plot <- make_transition_plot(filter(transition_counts_focus2, TIPO_FLOTA == "ART"),   "Artisanal (ART)")
# Arrange vertical: IND then ART. For side-by-side use ind_plot + art_plot
ind_plot + art_plot
View(transition_counts_focus2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
library(patchwork)
# 1) Join before/after keeping fleet info
strategy_transitions <- full_join(strategy_before, strategy_after,
by = "COD_BARCO", suffix = c("_Before", "_After")) %>%
mutate(
TIPO_FLOTA = dplyr::coalesce(TIPO_FLOTA_Before, TIPO_FLOTA_After),
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
# 2) Simplify strategies
simplify_focus_strategy <- function(strategy) {
strategy <- as.character(strategy)
sapply(strategy, function(x) {
if (is.na(x)) return(NA_character_)
if (x == "Only Sardine") return("Sardine")
if (x == "Only Anchoveta") return("Anchoveta")
if (grepl("Sardine", x) & grepl("Anchoveta", x)) return("Sardine and Anchoveta")
if (x == "No fishing") return("No fishing")
return("Other")
}, USE.NAMES = FALSE)
}
# 3) Count transitions (only focus categories)
transition_counts_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple  = simplify_focus_strategy(strategy_After)
) %>%
filter(
strategy_Before_simple %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing") |
strategy_After_simple  %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing")
) %>%
count(TIPO_FLOTA, strategy_Before_simple, strategy_After_simple, name = "n")
# 4) Plot function with unique IDs per axis
make_transition_plot <- function(df, fleet_label) {
if (nrow(df) == 0) {
return(ggplot() + ggtitle(paste0(fleet_label, " (no data)")))
}
# Unique IDs per axis
df2 <- df %>%
mutate(
strategy_Before_axis = paste0(strategy_Before_simple, "_before"),
strategy_After_axis  = paste0(strategy_After_simple, "_after")
)
# Base plot
p <- ggplot(df2, aes(axis1 = strategy_Before_axis,
axis2 = strategy_After_axis,
y = n)) +
geom_flow(aes(fill = strategy_Before_simple),
width = 1/12, knot.pos = 0.4, alpha = 0.85) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
scale_x_discrete(labels = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of vessels", title = fleet_label) +
theme_minimal(base_size = 10) +
theme(legend.position = "none", panel.grid = element_blank())
# Label positions
gb <- ggplot_build(p)
stratum_idx <- which(sapply(gb$data, function(d) "stratum" %in% names(d)))
sd <- gb$data[[stratum_idx[1]]] %>%
mutate(y = (ymin + ymax) / 2,
label = gsub("_(before|after)", "", stratum))  # clean labels
left_labels  <- sd %>% filter(x == 1) %>% mutate(hjust = 1, x = x - 0.05)
right_labels <- sd %>% filter(x == 2) %>% mutate(hjust = 0, x = x + 0.05)
# Add labels
p +
geom_text(data = left_labels,
aes(x = x, y = y, label = label, hjust = hjust),
size = 2.8, inherit.aes = FALSE) +
geom_text(data = right_labels,
aes(x = x, y = y, label = label, hjust = hjust),
size = 2.8, inherit.aes = FALSE)
}
# 5) Build plots for IND and ART
ind_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "IND"),
"Industrial (IND)")
art_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "ART"),
"Artisanal (ART)")
# 6) Arrange vertically (or use + for side-by-side)
ind_plot / art_plot
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
library(patchwork)
# 1) Join before/after keeping fleet info
strategy_transitions <- full_join(strategy_before, strategy_after,
by = "COD_BARCO", suffix = c("_Before", "_After")) %>%
mutate(
TIPO_FLOTA = dplyr::coalesce(TIPO_FLOTA_Before, TIPO_FLOTA_After),
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
# 2) Simplify strategies
simplify_focus_strategy <- function(strategy) {
strategy <- as.character(strategy)
sapply(strategy, function(x) {
if (is.na(x)) return(NA_character_)
if (x == "Only Sardine") return("Sardine")
if (x == "Only Anchoveta") return("Anchoveta")
if (grepl("Sardine", x) & grepl("Anchoveta", x)) return("Sardine and Anchoveta")
if (x == "No fishing") return("No fishing")
return("Other")
}, USE.NAMES = FALSE)
}
# 3) Count transitions (only focus categories)
transition_counts_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple  = simplify_focus_strategy(strategy_After)
) %>%
filter(
strategy_Before_simple %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing") |
strategy_After_simple  %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing")
) %>%
count(TIPO_FLOTA, strategy_Before_simple, strategy_After_simple, name = "n")
# 4) Plot function with unique IDs per axis
make_transition_plot <- function(df, fleet_label) {
if (nrow(df) == 0) {
return(ggplot() + ggtitle(paste0(fleet_label, " (no data)")))
}
# 1. Unique IDs + collapse duplicates
df2 <- df %>%
mutate(
strategy_Before_axis = paste0(strategy_Before_simple, "_before"),
strategy_After_axis  = paste0(strategy_After_simple, "_after")
) %>%
group_by(strategy_Before_axis, strategy_After_axis,
strategy_Before_simple, strategy_After_simple) %>%
summarise(n = sum(n), .groups = "drop")
# 2. Base plot
p <- ggplot(df2, aes(axis1 = strategy_Before_axis,
axis2 = strategy_After_axis,
y = n)) +
geom_flow(aes(fill = strategy_Before_simple),
width = 1/12, knot.pos = 0.4, alpha = 0.85) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
scale_x_discrete(labels = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of vessels", title = fleet_label) +
theme_minimal(base_size = 10) +
theme(legend.position = "none", panel.grid = element_blank())
# 3. Label positions with clean names
gb <- ggplot_build(p)
stratum_idx <- which(sapply(gb$data, function(d) "stratum" %in% names(d)))
sd <- gb$data[[stratum_idx[1]]] %>%
mutate(y = (ymin + ymax) / 2,
label = gsub("_(before|after)", "", stratum))
left_labels  <- sd %>% filter(x == 1) %>% mutate(hjust = 1, x = x - 0.05)
right_labels <- sd %>% filter(x == 2) %>% mutate(hjust = 0, x = x + 0.05)
# 4. Add labels
p +
geom_text(data = left_labels,
aes(x = x, y = y, label = label, hjust = hjust),
size = 2.8, inherit.aes = FALSE) +
geom_text(data = right_labels,
aes(x = x, y = y, label = label, hjust = hjust),
size = 2.8, inherit.aes = FALSE)
}
# 5) Build plots for IND and ART
ind_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "IND"),
"Industrial (IND)")
art_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "ART"),
"Artisanal (ART)")
# 6) Arrange vertically (or use + for side-by-side)
ind_plot / art_plot
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
library(patchwork)
# 1) Join before/after keeping fleet info
strategy_transitions <- full_join(strategy_before, strategy_after,
by = "COD_BARCO", suffix = c("_Before", "_After")) %>%
mutate(
TIPO_FLOTA = dplyr::coalesce(TIPO_FLOTA_Before, TIPO_FLOTA_After),
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
# 2) Simplify strategies
simplify_focus_strategy <- function(strategy) {
strategy <- as.character(strategy)
sapply(strategy, function(x) {
if (is.na(x)) return(NA_character_)
if (x == "Only Sardine") return("Sardine")
if (x == "Only Anchoveta") return("Anchoveta")
if (grepl("Sardine", x) & grepl("Anchoveta", x)) return("Sardine and Anchoveta")
if (x == "No fishing") return("No fishing")
return("Other")
}, USE.NAMES = FALSE)
}
# 3) Count transitions (only focus categories)
transition_counts_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple  = simplify_focus_strategy(strategy_After)
) %>%
filter(
strategy_Before_simple %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing") |
strategy_After_simple  %in% c("Sardine","Anchoveta","Sardine and Anchoveta","No fishing")
) %>%
count(TIPO_FLOTA, strategy_Before_simple, strategy_After_simple, name = "n")
# 4) Plot function with unique IDs per axis
make_transition_plot <- function(df, fleet_label) {
if (nrow(df) == 0) {
return(ggplot() + ggtitle(paste0(fleet_label, " (no data)")))
}
# 1. Datos con IDs únicos y colapsados
df2 <- df %>%
mutate(
strategy_Before_axis = paste0(strategy_Before_simple, "_before"),
strategy_After_axis  = paste0(strategy_After_simple, "_after")
) %>%
group_by(strategy_Before_axis, strategy_After_axis,
strategy_Before_simple, strategy_After_simple) %>%
summarise(n = sum(n), .groups = "drop")
# 2. Forzar niveles únicos por eje
all_strata <- c(unique(df2$strategy_Before_axis),
unique(df2$strategy_After_axis))
df2 <- df2 %>%
mutate(
strategy_Before_axis = factor(strategy_Before_axis, levels = all_strata),
strategy_After_axis  = factor(strategy_After_axis,  levels = all_strata)
)
# 3. Plot base
p <- ggplot(df2, aes(axis1 = strategy_Before_axis,
axis2 = strategy_After_axis,
y = n)) +
geom_alluvium(aes(fill = strategy_Before_simple),  # <- más robusto que geom_flow
width = 1/12, knot.pos = 0.4, alpha = 0.85) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
scale_x_discrete(labels = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of vessels", title = fleet_label) +
theme_minimal(base_size = 10) +
theme(legend.position = "none", panel.grid = element_blank())
# 4. Extraer estratos únicos y limpiar etiquetas
gb <- ggplot_build(p)
stratum_idx <- which(sapply(gb$data, function(d) "stratum" %in% names(d)))
sd <- gb$data[[stratum_idx[1]]] %>%
mutate(y = (ymin + ymax) / 2,
label = gsub("_(before|after)", "", stratum))
left_labels  <- sd %>% filter(x == 1) %>% mutate(hjust = 1, x = x - 0.05)
right_labels <- sd %>% filter(x == 2) %>% mutate(hjust = 0, x = x + 0.05)
# 5. Añadir etiquetas limpias
p +
geom_text(data = left_labels,
aes(x = x, y = y, label = label, hjust = hjust),
size = 2.8, inherit.aes = FALSE) +
geom_text(data = right_labels,
aes(x = x, y = y, label = label, hjust = hjust),
size = 2.8, inherit.aes = FALSE)
}
# 5) Build plots for IND and ART
ind_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "IND"),
"Industrial (IND)")
art_plot <- make_transition_plot(filter(transition_counts_focus, TIPO_FLOTA == "ART"),
"Artisanal (ART)")
# 6) Arrange vertically (or use + for side-by-side)
ind_plot / art_plot
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
library(patchwork)
# 1) Join before/after keeping fleet info
strategy_transitions <- full_join(strategy_before, strategy_after,
by = "COD_BARCO", suffix = c("_Before", "_After")) %>%
mutate(
TIPO_FLOTA = dplyr::coalesce(TIPO_FLOTA_Before, TIPO_FLOTA_After),
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
