values_fill = 0) %>%
dplyr::select(c(COD_BARCO, ANCHOVETA, `SARDINA COMUN`, JUREL)) %>%
mutate(OTHER = 1 - ANCHOVETA - `SARDINA COMUN` - JUREL) %>%
rename(
Anchoveta = `ANCHOVETA`,
Sardine = `SARDINA COMUN`,
JackMackerel = `JUREL`,
Other = `OTHER`
)
get_strategy <- function(sardine, jackmackerel, anchoveta, other) {
species <- c()
if (sardine > 0.20) species <- c(species, "Sardine")
if (jackmackerel > 0.20) species <- c(species, "JackMackerel")
if (anchoveta > 0.20) species <- c(species, "Anchoveta")
if (other > 0.20) species <- c(species, "Other")
n <- length(species)
if (n == 0) return("None or negligible")
if (n == 1) return(paste("Only", species[1]))
if (n == 2) return(paste(species[1], "and", species[2]))
if (n == 3) return(paste(species[1], ",", species[2], "and", species[3]))
return(paste(species[1], ",", species[2], ",", species[3], ",",
"and", species[4]))
}
vessel_species_year <- vessel_species_year %>%
mutate(strategy_After = pmap_chr(
list(Sardine, JackMackerel, Anchoveta, Other),
get_strategy
))
strategy_percent <- vessel_species_year %>%
group_by(strategy) %>%
summarise(n = n(), .groups = "drop") %>%
mutate(percent = round(100 * n / sum(n), 1)) %>%
arrange(desc(percent))
library(dplyr)
library(tidyr)
library(purrr)
library(lubridate)
# First, get your original summarized table
vessel_species_year <- logbooks %>% filter(year >= 2019) %>% ### all species available after 2019?
select(COD_BARCO, year, NOMBRE_ESPECIE, CAPTURA_RETENIDA) %>%
group_by(COD_BARCO, year, NOMBRE_ESPECIE) %>%
summarize(total_catch = sum(CAPTURA_RETENIDA, na.rm = TRUE), .groups = "drop") %>%
group_by(COD_BARCO, year) %>%
mutate(species_share = total_catch / sum(total_catch, na.rm = TRUE)) %>%
ungroup() %>%
select(-total_catch) %>%
complete(COD_BARCO, year, NOMBRE_ESPECIE, fill = list(species_share = 0)) %>%
group_by(COD_BARCO, year) %>%
mutate(species_share_check = sum(species_share, na.rm = TRUE)) %>%
filter(species_share_check > 0) %>%
dplyr::select(-c(species_share_check)) %>%
group_by(COD_BARCO, NOMBRE_ESPECIE) %>%
summarize(species_share = mean(species_share, na.rm = TRUE)) %>%
pivot_wider(
names_from = NOMBRE_ESPECIE,
values_from = species_share,
values_fill = 0) %>%
dplyr::select(c(COD_BARCO, ANCHOVETA, `SARDINA COMUN`, JUREL)) %>%
mutate(OTHER = 1 - ANCHOVETA - `SARDINA COMUN` - JUREL) %>%
rename(
Anchoveta = `ANCHOVETA`,
Sardine = `SARDINA COMUN`,
JackMackerel = `JUREL`,
Other = `OTHER`
)
get_strategy <- function(sardine, jackmackerel, anchoveta, other) {
species <- c()
if (sardine > 0.20) species <- c(species, "Sardine")
if (jackmackerel > 0.20) species <- c(species, "JackMackerel")
if (anchoveta > 0.20) species <- c(species, "Anchoveta")
if (other > 0.20) species <- c(species, "Other")
n <- length(species)
if (n == 0) return("None or negligible")
if (n == 1) return(paste("Only", species[1]))
if (n == 2) return(paste(species[1], "and", species[2]))
if (n == 3) return(paste(species[1], ",", species[2], "and", species[3]))
return(paste(species[1], ",", species[2], ",", species[3], ",",
"and", species[4]))
}
vessel_species_year <- vessel_species_year %>%
mutate(strategy_After = pmap_chr(
list(Sardine, JackMackerel, Anchoveta, Other),
get_strategy
))
strategy_percent <- vessel_species_year %>%
group_by(strategy_After) %>%
summarise(n = n(), .groups = "drop") %>%
mutate(percent = round(100 * n / sum(n), 1)) %>%
arrange(desc(percent))
strategy_vessel <- vessel_species_year %>%
select(COD_BARCO, strategy_After)
library(dplyr)
library(tidyr)
library(purrr)
library(lubridate)
# First, get your original summarized table
vessel_species_year <- logbooks %>%
filter(year >= 2012, year < 2019) %>%
select(COD_BARCO, year, NOMBRE_ESPECIE, CAPTURA_RETENIDA) %>%
group_by(COD_BARCO, year, NOMBRE_ESPECIE) %>%
summarize(total_catch = sum(CAPTURA_RETENIDA, na.rm = TRUE), .groups = "drop") %>%
group_by(COD_BARCO, year) %>%
mutate(species_share = total_catch / sum(total_catch, na.rm = TRUE)) %>%
ungroup() %>%
select(-total_catch) %>%
complete(COD_BARCO, year, NOMBRE_ESPECIE, fill = list(species_share = 0)) %>%
group_by(COD_BARCO, year) %>%
mutate(species_share_check = sum(species_share, na.rm = TRUE)) %>%
filter(species_share_check > 0) %>%
dplyr::select(-c(species_share_check)) %>%
group_by(COD_BARCO, NOMBRE_ESPECIE) %>%
summarize(species_share = mean(species_share, na.rm = TRUE)) %>%
pivot_wider(
names_from = NOMBRE_ESPECIE,
values_from = species_share,
values_fill = 0) %>%
dplyr::select(c(COD_BARCO, ANCHOVETA, `SARDINA COMUN`, JUREL)) %>%
mutate(OTHER = 1 - ANCHOVETA - `SARDINA COMUN` - JUREL) %>%
rename(
Anchoveta = `ANCHOVETA`,
Sardine = `SARDINA COMUN`,
JackMackerel = `JUREL`,
Other = `OTHER`
)
vessel_species_year_pre <- vessel_species_year %>%
mutate(strategy_Before = pmap_chr(
list(Sardine, JackMackerel, Anchoveta, Other),
get_strategy
))
strategy_percent_pre <- vessel_species_year_pre %>%
group_by(strategy_Before) %>%
summarise(n = n(), .groups = "drop") %>%
mutate(percent = round(100 * n / sum(n), 1)) %>%
arrange(desc(percent))
strategy_vessel_pre <- vessel_species_year %>%
select(COD_BARCO, strategy_Before)
View(vessel_species_year_pre)
strategy_percent_pre <- vessel_species_year_pre %>%
group_by(strategy_Before) %>%
summarise(n = n(), .groups = "drop") %>%
mutate(percent = round(100 * n / sum(n), 1)) %>%
arrange(desc(percent))
strategy_vessel_pre <- vessel_species_year_pre %>%
select(COD_BARCO, strategy_Before)
View(strategy_vessel)
View(strategy_vessel_pre)
library(knitr)
kable(strategy_percent, format = "markdown",
col.names = c("Strategy", "Total", "Percent (%)"))
rm(list = c("strategy_percent"))
library(dplyr)
library(tidyr)
library(purrr)
library(lubridate)
# First, get your original summarized table
vessel_species_year <- logbooks %>% filter(year >= 2019) %>% ### all species available after 2019?
select(COD_BARCO, year, NOMBRE_ESPECIE, CAPTURA_RETENIDA) %>%
group_by(COD_BARCO, year, NOMBRE_ESPECIE) %>%
summarize(total_catch = sum(CAPTURA_RETENIDA, na.rm = TRUE), .groups = "drop") %>%
group_by(COD_BARCO, year) %>%
mutate(species_share = total_catch / sum(total_catch, na.rm = TRUE)) %>%
ungroup() %>%
select(-total_catch) %>%
complete(COD_BARCO, year, NOMBRE_ESPECIE, fill = list(species_share = 0)) %>%
group_by(COD_BARCO, year) %>%
mutate(species_share_check = sum(species_share, na.rm = TRUE)) %>%
filter(species_share_check > 0) %>%
dplyr::select(-c(species_share_check)) %>%
group_by(COD_BARCO, NOMBRE_ESPECIE) %>%
summarize(species_share = mean(species_share, na.rm = TRUE)) %>%
pivot_wider(
names_from = NOMBRE_ESPECIE,
values_from = species_share,
values_fill = 0) %>%
dplyr::select(c(COD_BARCO, ANCHOVETA, `SARDINA COMUN`, JUREL)) %>%
mutate(OTHER = 1 - ANCHOVETA - `SARDINA COMUN` - JUREL) %>%
rename(
Anchoveta = `ANCHOVETA`,
Sardine = `SARDINA COMUN`,
JackMackerel = `JUREL`,
Other = `OTHER`
)
get_strategy <- function(sardine, jackmackerel, anchoveta, other) {
species <- c()
if (sardine > 0.20) species <- c(species, "Sardine")
if (jackmackerel > 0.20) species <- c(species, "JackMackerel")
if (anchoveta > 0.20) species <- c(species, "Anchoveta")
if (other > 0.20) species <- c(species, "Other")
n <- length(species)
if (n == 0) return("None or negligible")
if (n == 1) return(paste("Only", species[1]))
if (n == 2) return(paste(species[1], "and", species[2]))
if (n == 3) return(paste(species[1], ",", species[2], "and", species[3]))
return(paste(species[1], ",", species[2], ",", species[3], ",",
"and", species[4]))
}
vessel_species_year <- vessel_species_year %>%
mutate(strategy_After = pmap_chr(
list(Sardine, JackMackerel, Anchoveta, Other),
get_strategy
))
strategy_percent <- vessel_species_year %>%
group_by(strategy_After) %>%
summarise(n = n(), .groups = "drop") %>%
mutate(percent = round(100 * n / sum(n), 1)) %>%
arrange(desc(percent))
strategy_after <- vessel_species_year %>%
select(COD_BARCO, strategy_After)
library(dplyr)
library(tidyr)
library(purrr)
library(lubridate)
# First, get your original summarized table
vessel_species_year <- logbooks %>%
filter(year >= 2012, year < 2019) %>%
select(COD_BARCO, year, NOMBRE_ESPECIE, CAPTURA_RETENIDA) %>%
group_by(COD_BARCO, year, NOMBRE_ESPECIE) %>%
summarize(total_catch = sum(CAPTURA_RETENIDA, na.rm = TRUE), .groups = "drop") %>%
group_by(COD_BARCO, year) %>%
mutate(species_share = total_catch / sum(total_catch, na.rm = TRUE)) %>%
ungroup() %>%
select(-total_catch) %>%
complete(COD_BARCO, year, NOMBRE_ESPECIE, fill = list(species_share = 0)) %>%
group_by(COD_BARCO, year) %>%
mutate(species_share_check = sum(species_share, na.rm = TRUE)) %>%
filter(species_share_check > 0) %>%
dplyr::select(-c(species_share_check)) %>%
group_by(COD_BARCO, NOMBRE_ESPECIE) %>%
summarize(species_share = mean(species_share, na.rm = TRUE)) %>%
pivot_wider(
names_from = NOMBRE_ESPECIE,
values_from = species_share,
values_fill = 0) %>%
dplyr::select(c(COD_BARCO, ANCHOVETA, `SARDINA COMUN`, JUREL)) %>%
mutate(OTHER = 1 - ANCHOVETA - `SARDINA COMUN` - JUREL) %>%
rename(
Anchoveta = `ANCHOVETA`,
Sardine = `SARDINA COMUN`,
JackMackerel = `JUREL`,
Other = `OTHER`
)
vessel_species_year_pre <- vessel_species_year %>%
mutate(strategy_Before = pmap_chr(
list(Sardine, JackMackerel, Anchoveta, Other),
get_strategy
))
strategy_percent_pre <- vessel_species_year_pre %>%
group_by(strategy_Before) %>%
summarise(n = n(), .groups = "drop") %>%
mutate(percent = round(100 * n / sum(n), 1)) %>%
arrange(desc(percent))
strategy_before <- vessel_species_year_pre %>%
select(COD_BARCO, strategy_Before)
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO")
View(strategy_transitions)
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
filter(!is.na(strategy_Before) & !is.na(strategy_After))  # vessels present in both periods
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
View(transition_counts)
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
filter(!is.na(strategy_Before) & !is.na(strategy_After))  # vessels present in both periods
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
library(ggalluvial)
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
library(ggalluvial)
library(ggplot2)
ggplot(transition_counts,
aes(axis1 = strategy_Before, axis2 = strategy_After, y = n)) +
geom_alluvium(aes(fill = strategy_Before), width = 1/12) +
geom_stratum(width = 1/12, fill = "gray90", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
scale_x_discrete(limits = c("2012–2018", "2019–2024"), expand = c(.1, .1)) +
labs(title = "Vessel Strategy Transitions (2012–2018 → 2019–2024)",
x = "", y = "Number of Vessels") +
theme_minimal() +
theme(legend.position = "none")
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
library(ggalluvial)
library(ggplot2)
ggplot(transition_counts,
aes(axis1 = strategy_Before, axis2 = strategy_After, y = n)) +
geom_alluvium(aes(fill = strategy_Before), width = 1/12) +
geom_stratum(width = 1/12, fill = "gray90", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
scale_x_discrete(limits = c("2012–2018", "2019–2024"), expand = c(.1, .1)) +
labs(title = "Vessel Strategy Transitions (2012–2018 → 2019–2024)",
x = "", y = "Number of Vessels") +
theme_minimal() +
theme(legend.position = "none")
View(strategy_transitions)
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
library(ggplot2)
ggplot(transition_counts_simple,
aes(x = strategy_After_simple, y = strategy_Before_simple, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 4) +
scale_fill_gradient(low = "#e0f3f8", high = "#0868ac") +
labs(
title = "Vessel Strategy Transitions (Heatmap)",
x = "2019–2024 Strategy",
y = "2012–2018 Strategy",
fill = "Number of Vessels"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
library(ggplot2)
ggplot(transition_counts,
aes(x = strategy_After_simple, y = strategy_Before_simple, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 4) +
scale_fill_gradient(low = "#e0f3f8", high = "#0868ac") +
labs(
title = "Vessel Strategy Transitions (Heatmap)",
x = "2019–2024 Strategy",
y = "2012–2018 Strategy",
fill = "Number of Vessels"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
library(ggplot2)
ggplot(transition_counts,
aes(x = strategy_after, y = strategy_before, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 4) +
scale_fill_gradient(low = "#e0f3f8", high = "#0868ac") +
labs(
title = "Vessel Strategy Transitions (Heatmap)",
x = "2019–2024 Strategy",
y = "2012–2018 Strategy",
fill = "Number of Vessels"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
library(ggplot2)
ggplot(transition_counts,
aes(x = strategy_After, y = strategy_Before, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 4) +
scale_fill_gradient(low = "#e0f3f8", high = "#0868ac") +
labs(
title = "Vessel Strategy Transitions (Heatmap)",
x = "2019–2024 Strategy",
y = "2012–2018 Strategy",
fill = "Number of Vessels"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
# transition_counts <- strategy_transitions %>%
#   count(strategy_Before, strategy_After)
strategy_transitions <- strategy_transitions %>%
mutate(
category = case_when(
strategy_Before == "No fishing" & strategy_After != "No fishing" ~ "Entered",
strategy_Before != "No fishing" & strategy_After == "No fishing" ~ "Exited",
strategy_Before == strategy_After ~ "Stayed",
TRUE ~ "Switched"
)
)
category_counts <- strategy_transitions %>%
count(category) %>%
mutate(percent = n / sum(n) * 100)
library(ggplot2)
ggplot(category_counts, aes(x = category, y = n, fill = category)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste0(n, "\n(", round(percent,1), "%)")), vjust = -0.5) +
labs(title = "Summary of Vessel Strategy Changes",
y = "Number of vessels", x = "") +
theme_minimal()
simplify_focus_strategy <- function(strategy) {
if (strategy == "Only Sardine") return("Sardine")
if (strategy == "Only Anchoveta") return("Anchoveta")
if (grepl("Sardine", strategy) & grepl("Anchoveta", strategy)) return("Sardine & Anchoveta")
if (strategy == "No fishing") return("No fishing")
return("Other")
}
transition_counts_focus <- strategy_transitions_focus %>%
count(strategy_Before_simple, strategy_After_simple)
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
strategy_transitions_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple = simplify_focus_strategy(strategy_After)
) %>%
filter(strategy_Before_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "No fishing") |
strategy_After_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "No fishing"))
transition_counts_focus <- strategy_transitions_focus %>%
count(strategy_Before_simple, strategy_After_simple)
library(ggalluvial)
library(ggplot2)
ggplot(transition_counts_focus,
aes(axis1 = strategy_Before_simple, axis2 = strategy_After_simple, y = n)) +
geom_alluvium(aes(fill = strategy_Before_simple), width = 1/12) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 4) +
scale_x_discrete(limits = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
labs(title = "Vessel Strategy Transitions Focused on Sardine & Anchoveta",
x = "", y = "Number of Vessels") +
theme_minimal() +
theme(legend.position = "none")
library(ggplot2)
library(ggalluvial)
ggplot(transition_counts_focus,
aes(axis1 = strategy_Before_simple, axis2 = strategy_After_simple, y = n)) +
geom_flow(aes(fill = strategy_Before_simple), width = 1/12, knot.pos = 0.4, alpha = 0.8) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 4) +
scale_x_discrete(limits = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(
title = "Smooth Vessel Strategy Transitions (Anchoveta & Sardine)",
x = "", y = "Number of Vessels",
fill = "2012–2018 Strategy"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "none",
panel.grid = element_blank()
)
library(ggplot2)
library(ggalluvial)
library(dplyr)
# Create the base plot object
p <- ggplot(transition_counts_focus,
aes(axis1 = strategy_Before_simple, axis2 = strategy_After_simple, y = n)) +
geom_flow(aes(fill = strategy_Before_simple), width = 1/12, knot.pos = 0.4, alpha = 0.8) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
scale_x_discrete(limits = c("2012–2018", "2019–2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(
title = "Smooth Vessel Strategy Transitions (Anchoveta & Sardine)",
x = "", y = "Number of Vessels"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "none",
panel.grid = element_blank()
)
# Get label positions from the stratum data
stratum_data <- ggplot_build(p)$data[[2]]
# Separate left (axis1) and right (axis2) sides
left_labels <- stratum_data %>%
filter(x == 1) %>%
mutate(hjust = 1, x = x - 0.05)  # shift left
right_labels <- stratum_data %>%
filter(x == 2) %>%
mutate(hjust = 0, x = x + 0.05)  # shift right
# Add to the plot
p +
geom_text(data = left_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 3.2, inherit.aes = FALSE) +
geom_text(data = right_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 3.2, inherit.aes = FALSE)
p +
geom_text(data = left_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2, inherit.aes = FALSE) +
geom_text(data = right_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2, inherit.aes = FALSE)
p +
geom_text(data = left_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.5, inherit.aes = FALSE) +
geom_text(data = right_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.5, inherit.aes = FALSE)
