#---------------------------------
# Distance to coast (m)
#---------------------------------
grid_sf$dist2coast <- st_distance(grid_sf, coastline) |> as.numeric()
grid_sf$dist2coast2 <- st_distance(grid_sf, coastline2) |> as.numeric()
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
library(ggplot2)
#---------------------------------
# Load dataset
#---------------------------------
usuario <- Sys.info()[["user"]]
dirdata <- paste0("C:/Users/", usuario,
"/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/")
env_dt <- readRDS("data/env/EnvMergedDaily_2012_2025_0.125deg.rds")
#---------------------------------
# Unique grid cells
#---------------------------------
grid_coords <- env_dt %>%
select(lon, lat) %>%
distinct()
# Convert to sf and keep lon/lat
grid_sf <- st_as_sf(grid_coords, coords = c("lon", "lat"), crs = 4326) %>%
mutate(lon = st_coordinates(.)[,1],
lat = st_coordinates(.)[,2])
# Transform to projected CRS (meters)
grid_sf <- st_transform(grid_sf, 6933)
#---------------------------------
# Coastline
#---------------------------------
land <- ne_countries(scale = "medium", returnclass = "sf")
# Keep only South American countries (mainland)
south_america <- land %>%
filter(continent == "South America")
# Build the coastline from union
coastline <- st_union(st_geometry(south_america)) %>%
st_transform(6933)
#---------------------------------
# Remove land points
#---------------------------------
inside_land <- st_intersects(grid_sf, coastline, sparse = FALSE)[,1]
grid_sf <- grid_sf[!inside_land, ]
#---------------------------------
# Distance to coast (m)
#---------------------------------
grid_sf$dist2coast <- st_distance(grid_sf, coastline) |> as.numeric()
#---------------------------------
# Maximum distance by latitude
#---------------------------------
grid_dt <- st_drop_geometry(grid_sf)
max_dist_by_lat <- grid_dt %>%
group_by(lat) %>%
summarise(max_dist = max(dist2coast, na.rm = TRUE)) %>%
arrange(lat)
View(max_dist_by_lat)
chile <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(admin == "Chile")
# Sometimes Chile polygon still has Easter Island; dissolve by geometry
chile_main <- st_union(chile) %>% st_transform(6933)
# Optional: drop small polygons (islands) by area threshold
chile_main <- st_cast(chile_main, "POLYGON")
chile_main <- chile_main[which.max(st_area(chile_main))]  # keep largest (mainland)
View(chile_main)
View(chile_main)
coastline <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(admin == "Chile") %>%
st_union() %>%
st_cast("POLYGON") %>%
(\(x) x[which.max(st_area(x))])() %>%   # keep largest polygon
st_transform(6933)
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
library(ggplot2)
#---------------------------------
# Load dataset
#---------------------------------
usuario <- Sys.info()[["user"]]
dirdata <- paste0("C:/Users/", usuario,
"/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/")
env_dt <- readRDS("data/env/EnvMergedDaily_2012_2025_0.125deg.rds")
#---------------------------------
# Unique grid cells
#---------------------------------
grid_coords <- env_dt %>%
select(lon, lat) %>%
distinct()
# Convert to sf and keep lon/lat
grid_sf <- st_as_sf(grid_coords, coords = c("lon", "lat"), crs = 4326) %>%
mutate(lon = st_coordinates(.)[,1],
lat = st_coordinates(.)[,2])
# Transform to projected CRS (meters)
grid_sf <- st_transform(grid_sf, 6933)
# chile <- ne_countries(scale = "medium", returnclass = "sf") %>%
#   filter(admin == "Chile")
#
# # Sometimes Chile polygon still has Easter Island; dissolve by geometry
# chile_main <- st_union(chile) %>% st_transform(6933)
#
# # Optional: drop small polygons (islands) by area threshold
# chile_main <- st_cast(chile_main, "POLYGON")
# chile_main <- chile_main[which.max(st_area(chile_main))]  # keep largest (mainland)
# #---------------------------------
# # Coastline
# #---------------------------------
# land <- ne_countries(scale = "medium", returnclass = "sf")
#
# # Keep only South American countries (mainland)
# south_america <- land %>%
#   filter(continent == "South America")
#
# # Build the coastline from union
# coastline <- st_union(st_geometry(south_america)) %>%
#   st_transform(6933)
coastline <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(admin == "Chile") %>%
st_union() %>%
st_cast("POLYGON") %>%
(\(x) x[which.max(st_area(x))])() %>%   # keep largest polygon
st_transform(6933)
#---------------------------------
# Remove land points
#---------------------------------
inside_land <- st_intersects(grid_sf, coastline, sparse = FALSE)[,1]
grid_sf <- grid_sf[!inside_land, ]
#---------------------------------
# Distance to coast (m)
#---------------------------------
grid_sf$dist2coast <- st_distance(grid_sf, coastline) |> as.numeric()
#---------------------------------
# Maximum distance by latitude
#---------------------------------
grid_dt <- st_drop_geometry(grid_sf)
max_dist_by_lat <- grid_dt %>%
group_by(lat) %>%
summarise(max_dist = max(dist2coast, na.rm = TRUE)) %>%
arrange(lat)
View(max_dist_by_lat)
# Minimum of those maxima (narrowest width of ocean band)
min_maxdist <- min(max_dist_by_lat$max_dist, na.rm = TRUE)
cat("Minimum of the maximum distances (km):",
round(min_maxdist / 1000, 2), "\n")
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
library(ggplot2)
#---------------------------------
# Load dataset
#---------------------------------
usuario <- Sys.info()[["user"]]
dirdata <- paste0("C:/Users/", usuario,
"/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/")
env_dt <- readRDS("data/env/EnvMergedDaily_2012_2025_0.125deg.rds")
#---------------------------------
# Unique grid cells
#---------------------------------
grid_coords <- env_dt %>%
select(lon, lat) %>%
distinct()
# Convert to sf and keep lon/lat
grid_sf <- st_as_sf(grid_coords, coords = c("lon", "lat"), crs = 4326) %>%
mutate(lon = st_coordinates(.)[,1],
lat = st_coordinates(.)[,2])
# Transform to projected CRS (meters)
grid_sf <- st_transform(grid_sf, 6933)
# chile <- ne_countries(scale = "medium", returnclass = "sf") %>%
#   filter(admin == "Chile")
#
# # Sometimes Chile polygon still has Easter Island; dissolve by geometry
# chile_main <- st_union(chile) %>% st_transform(6933)
#
# # Optional: drop small polygons (islands) by area threshold
# chile_main <- st_cast(chile_main, "POLYGON")
# chile_main <- chile_main[which.max(st_area(chile_main))]  # keep largest (mainland)
# #---------------------------------
# # Coastline
# #---------------------------------
# land <- ne_countries(scale = "medium", returnclass = "sf")
#
# # Keep only South American countries (mainland)
# south_america <- land %>%
#   filter(continent == "South America")
#
# # Build the coastline from union
# coastline <- st_union(st_geometry(south_america)) %>%
#   st_transform(6933)
coastline <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(admin == "Chile") %>%
st_union() %>%
st_cast("POLYGON") %>%
(\(x) x[which.max(st_area(x))])() %>%   # keep largest polygon
st_transform(6933)
#---------------------------------
# Remove land points
#---------------------------------
inside_land <- st_intersects(grid_sf, coastline, sparse = FALSE)[,1]
grid_sf <- grid_sf[!inside_land, ]
#---------------------------------
# Distance to coast (m)
#---------------------------------
grid_sf$dist2coast <- st_distance(grid_sf, coastline) |> as.numeric()
#---------------------------------
# Maximum distance by latitude
#---------------------------------
grid_dt <- st_drop_geometry(grid_sf)
max_dist_by_lat <- grid_dt %>%
group_by(lat) %>%
summarise(max_dist = max(dist2coast, na.rm = TRUE)) %>%
arrange(lat)
# Minimum of those maxima (narrowest width of ocean band)
min_maxdist <- min(max_dist_by_lat$max_dist, na.rm = TRUE)
cat("Minimum of the maximum distances (km):",
round(min_maxdist / 1000, 2), "\n")
#---------------------------------
# Filter to <= min_maxdist
#---------------------------------
grid_filtered <- grid_sf %>%
filter(dist2coast <= 370000)
grid_filtered_dt <- as.data.table(st_drop_geometry(grid_filtered))
# Merge with full dataset
env_coast_dt <- env_dt %>%
inner_join(grid_filtered_dt, by = c("lon", "lat"))
saveRDS(env_coast_dt, file="data/env/EnvCoastDaily_2012_2025_0.125deg.rds")
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
library(ggplot2)
#---------------------------------
# Load dataset
#---------------------------------
usuario <- Sys.info()[["user"]]
dirdata <- paste0("C:/Users/", usuario,
"/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/")
env_dt <- readRDS("data/env/EnvMergedDaily_2012_2025_0.125deg.rds")
#---------------------------------
# Unique grid cells
#---------------------------------
grid_coords <- env_dt %>%
select(lon, lat) %>%
distinct()
grid_sf <- st_as_sf(grid_coords, coords = c("lon", "lat"), crs = 4326) %>%
st_transform(5880)
#---------------------------------
# Coastline: Chile continental
#---------------------------------
chile_mainland <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(admin == "Chile") %>%
st_union() %>%
st_cast("POLYGON") %>%
(\(x) x[which.max(st_area(x))])() %>%
st_transform(5880)
#---------------------------------
# Buffer de 200 nm (~370.4 km)
#---------------------------------
nm200 <- 200 * 1852   # en metros
chile_buffer <- st_buffer(chile_mainland, dist = nm200)
#---------------------------------
# Quitar puntos dentro de tierra
#---------------------------------
inside_land <- st_intersects(grid_sf, chile_mainland, sparse = FALSE)[,1]
grid_sf <- grid_sf[!inside_land, ]
#---------------------------------
# Distance to coast (m)
#---------------------------------
grid_sf$dist2coast <- st_distance(grid_sf, coastline) |> as.numeric()
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
#---------------------------------
# Load dataset
#---------------------------------
usuario <- Sys.info()[["user"]]
dirdata <- paste0("C:/Users/", usuario,
"/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/")
env_dt <- readRDS("data/env/EnvMergedDaily_2012_2025_0.125deg.rds")
grid_coords <- env_dt %>%
select(lon, lat) %>%
distinct()
grid_sf <- st_as_sf(grid_coords, coords = c("lon", "lat"), crs = 4326) %>%
st_transform(32719)  # UTM 19S, en metros
View(grid_sf)
chile_mainland <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(admin == "Chile") %>%
st_union() %>%
st_cast("POLYGON") %>%
(\(x) x[which.max(st_area(x))])() %>%
st_transform(32719)
nm200 <- 200 * 1852   # en metros
chile_buffer <- st_buffer(chile_mainland, dist = nm200)
View(chile_buffer)
inside_land <- st_intersects(grid_sf, chile_mainland, sparse = FALSE)[,1]
grid_sf <- grid_sf[!inside_land, ]
View(grid_sf)
inside_buffer <- st_intersects(grid_sf, chile_buffer, sparse = FALSE)[,1]
grid_filtered <- grid_sf[inside_buffer, ]
View(grid_filtered)
grid_filtered$dist2coast_m  <- as.numeric(st_distance(grid_filtered, chile_mainland))
grid_filtered$dist2coast_km <- grid_filtered$dist2coast_m / 1000
grid_filtered_dt <- as.data.table(st_drop_geometry(grid_filtered))
env_coast_dt <- env_dt %>%
inner_join(grid_filtered_dt, by = c("lon", "lat"))
# Extraer lon/lat de vuelta en grados para poder unir con env_dt
grid_filtered_lonlat <- st_transform(grid_filtered, 4326) %>%
mutate(lon = st_coordinates(.)[,1],
lat = st_coordinates(.)[,2]) %>%
st_drop_geometry() %>%
as.data.table()
# Ahora sí, join por lon/lat
env_coast_dt <- env_dt %>%
inner_join(grid_filtered_lonlat, by = c("lon", "lat"))
saveRDS(env_coast_dt,
file="data/env/EnvCoastDaily_2012_2025_0.125deg.rds")
library(ggplot2)
# Pasar a lat/lon para graficar bonito
grid_plot <- st_as_sf(grid_filtered, crs = 32719) %>%
st_transform(4326)
chile_plot <- st_as_sf(chile_mainland, crs = 32719) %>%
st_transform(4326)
buffer_plot <- st_as_sf(chile_buffer, crs = 32719) %>%
st_transform(4326)
ggplot() +
geom_sf(data = buffer_plot, fill = "lightblue", color = NA, alpha = 0.3) +
geom_sf(data = chile_plot, fill = "gray60", color = "black") +
geom_sf(data = grid_plot, aes(color = dist2coast_km), size = 0.3) +
scale_color_viridis_c(option = "plasma", name = "Distancia costa (km)") +
coord_sf(xlim = c(-82, -70), ylim = c(-42, -30)) +
theme_minimal() +
labs(title = "Distancia a la costa (≤ 200 nm)",
subtitle = "Grid ambiental 0.125° filtrado a 200 nm de Chile continental",
x = "Longitud", y = "Latitud")
ggplot() +
geom_sf(data = buffer_plot, fill = "lightblue", color = NA, alpha = 0.3) +
geom_sf(data = grid_plot, aes(color = dist2coast_km), size = 0.3) +
scale_color_viridis_c(option = "plasma", name = "Distancia costa (km)") +
coord_sf(xlim = c(-82, -70), ylim = c(-42, -30)) +
theme_minimal() +
labs(title = "Distancia a la costa (≤ 200 nm)",
subtitle = "Grid ambiental 0.125° filtrado a 200 nm de Chile continental",
x = "Longitud", y = "Latitud")
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
#---------------------------------
# Load dataset
#---------------------------------
usuario <- Sys.info()[["user"]]
dirdata <- paste0("C:/Users/", usuario,
"/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/")
env_dt <- readRDS("data/env/EnvMergedDaily_2012_2025_0.125deg.rds")
#---------------------------------
# Unique grid cells
#---------------------------------
grid_coords <- env_dt %>%
select(lon, lat) %>%
distinct()
grid_sf <- st_as_sf(grid_coords, coords = c("lon", "lat"), crs = 4326) %>%
st_transform(32719)  # UTM 19S, en metros
#---------------------------------
# Chile continental (mainland only)
#---------------------------------
chile_mainland <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(admin == "Chile") %>%
st_union() %>%
st_cast("POLYGON") %>%
(\(x) x[which.max(st_area(x))])() %>%
st_transform(32719)
#---------------------------------
# Buffer de 200 nm (~370.4 km)
#---------------------------------
nm200 <- 200 * 1852   # en metros
chile_buffer <- st_buffer(chile_mainland, dist = nm200)
#---------------------------------
# Polígono de toda Sudamérica (para quitar tierra)
#---------------------------------
south_america <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(continent == "South America") %>%
st_union() %>%
st_transform(32719)
#---------------------------------
# Zona de mar = buffer ∩ (no tierra)
#---------------------------------
sea_area <- st_difference(chile_buffer, south_america)
#---------------------------------
# Filtrar solo grilla en el mar
#---------------------------------
inside_sea <- st_intersects(grid_sf, sea_area, sparse = FALSE)[,1]
grid_filtered <- grid_sf[inside_sea, ]
#---------------------------------
# Distancias a la costa
#---------------------------------
grid_filtered$dist2coast_m  <- as.numeric(st_distance(grid_filtered, chile_mainland))
grid_filtered$dist2coast_km <- grid_filtered$dist2coast_m / 1000
#---------------------------------
# Convertir a lon/lat para merge
#---------------------------------
grid_filtered_lonlat <- st_transform(grid_filtered, 4326) %>%
mutate(lon = st_coordinates(.)[,1],
lat = st_coordinates(.)[,2]) %>%
st_drop_geometry() %>%
as.data.table()
#---------------------------------
# Merge con dataset original
#---------------------------------
env_coast_dt <- env_dt %>%
inner_join(grid_filtered_lonlat, by = c("lon", "lat"))
# Guardar
saveRDS(env_coast_dt,
file="data/env/EnvCoastDaily_2012_2025_0.125deg.rds")
#---------------------------------
# Figura
#---------------------------------
library(ggplot2)
# Pasar todo a lat/lon (EPSG:4326) para graficar
chile_plot   <- st_transform(chile_mainland, 4326)
buffer_plot  <- st_transform(chile_buffer, 4326)
sea_plot     <- st_transform(sea_area, 4326)
grid_plot    <- st_as_sf(grid_filtered, crs = 32719) %>%
st_transform(4326)
ggplot() +
geom_sf(data = buffer_plot, fill = "lightblue", color = NA, alpha = 0.3) +
geom_sf(data = sea_plot, fill = "lightblue", color = "blue", alpha = 0.2) +
geom_sf(data = chile_plot, fill = "gray60", color = "black") +
geom_sf(data = grid_plot, aes(color = dist2coast_km), size = 0.4) +
scale_color_viridis_c(option = "plasma", name = "Distancia costa (km)") +
coord_sf(xlim = c(-82, -70), ylim = c(-42, -30)) +
theme_minimal() +
labs(title = "Zona marítima chilena (≤ 200 nm, solo mar)",
subtitle = "Grid ambiental 0.125° filtrado frente a Chile continental",
x = "Longitud", y = "Latitud")
#---------------------------------
# Maximum distance by latitude
#---------------------------------
grid_dt <- st_drop_geometry(grid_sf)
max_dist_by_lat <- grid_dt %>%
group_by(lat) %>%
summarise(max_dist = max(dist2coast, na.rm = TRUE)) %>%
arrange(lat)
View(grid_dt)
ggplot() +
geom_sf(data = grid_plot, aes(color = dist2coast_km), size = 0.4) +
scale_color_viridis_c(option = "plasma", name = "Distancia costa (km)") +
coord_sf(xlim = c(-82, -70), ylim = c(-42, -30)) +
theme_minimal() +
labs(title = "Zona marítima chilena (≤ 200 nm, solo mar)",
subtitle = "Grid ambiental 0.125° filtrado frente a Chile continental",
x = "Longitud", y = "Latitud")
View(env_coast_dt)
View(env_coast_dt)
View(grid_filtered_lonlat)
max_dist_by_lat <- grid_filtered_lonlat %>%
group_by(lat) %>%
summarise(max_dist = max(dist2coast_km, na.rm = TRUE)) %>%
arrange(lat)
View(max_dist_by_lat)
min_maxdist <- min(max_dist_by_lat$max_dist, na.rm = TRUE)
max_dist_by_lat <- grid_filtered_lonlat %>%
group_by(lat) %>%
summarise(max_dist = max(dist2coast_km, na.rm = TRUE))
View(max_dist_by_lat)
grid_filtered_lonlat <- grid_filtered_lonlat %>%
mutate(
lon = round(lon, 3),   # 3 decimals ≈ 0.001° ~ 100 m
lat = round(lat, 3)
)
max_dist_by_lat <- grid_filtered_lonlat %>%
group_by(lat) %>%
summarise(max_dist = max(dist2coast_km, na.rm = TRUE)) %>%
arrange(lat)
View(max_dist_by_lat)
