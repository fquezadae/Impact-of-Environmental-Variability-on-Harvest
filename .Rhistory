depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
ncdf4::nc_close(nc)
# Directly convert to long format (no duplicate pivoting!)
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, long=TRUE, na.rm=FALSE)
# map layer index -> time + depth
nT <- length(time)
nD <- nlayers(r) / nT
time <- terra::time(r)
# Get depth levels from NetCDF
nc <- ncdf4::nc_open(f)
depth_name <- intersect(c("depth","deptht","z","lev","st_ocean"), names(nc$dim))[1]
depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
ncdf4::nc_close(nc)
# Convert to long format directly
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, long=TRUE, na.rm=FALSE)
# Number of time steps and depth layers
nT <- length(time)
nD <- nlyr(r) / nT   # terra equivalent of raster::nlayers
df_long <- df_long %>%
mutate(
time_idx  = ((lyr - 1) %/% nD) + 1,
depth_idx = ((lyr - 1) %%  nD) + 1,
time  = time[time_idx],
depth = if (!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
)
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
# Load the raster stack
r <- rast(f)
# Extract time
time <- terra::time(r)
# Get depth levels and variable information from NetCDF
nc <- ncdf4::nc_open(f)
depth_name <- intersect(c("depth","deptht","z","lev","st_ocean"), names(nc$dim))[1]
depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
var_names <- names(nc$var)
ncdf4::nc_close(nc)
cat("Number of layers:", nlyr(r), "\n")
cat("Time steps:", length(time), "\n")
cat("Depth values:", if(!anyNA(depth_vals)) length(depth_vals) else "Not found", "\n")
# Convert to long format
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, long=TRUE, na.rm=FALSE)
View(df_long)
n_vars <- length(var_names)
n_depth_layers <- if(!anyNA(depth_vals)) length(depth_vals) else 1
n_layers_per_time <- n_vars * n_depth_layers
df_long <- df_long %>%
mutate(
time_idx = ceiling(lyr / n_layers_per_time),
var_depth_idx = ((lyr - 1) %% n_layers_per_time) + 1,
var_idx = ceiling(var_depth_idx / n_depth_layers),
depth_idx = ((var_depth_idx - 1) %% n_depth_layers) + 1,
time = time[time_idx],
variable = if(length(var_names) > 0) var_names[var_idx] else paste0("var", var_idx),
depth = if(!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
)
df_long <- df_long %>%
mutate(
time_idx = ceiling(lyr / n_layers_per_time),
var_depth_idx = ((lyr - 1) %% n_layers_per_time) + 1,
var_idx = ceiling(var_depth_idx / n_depth_layers),
depth_idx = ((var_depth_idx - 1) %% n_depth_layers) + 1,
time = time[time_idx],
variable = if(length(var_names) > 0) var_names[var_idx] else paste0("var", var_idx),
depth = if(!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
) %>%
select(-var_depth_idx, -var_idx, -depth_idx)
# Convert to long format - this creates a 'layer' column instead of 'lyr'
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, na.rm=FALSE) %>%
tidyr::pivot_longer(
cols = -c(cell, x, y),
names_to = "layer",
values_to = "value"
)
View(df_long)
# Calculate the correct number of depth layers per time step
# This depends on how many variables are in your NetCDF
n_vars <- length(var_names)
n_depth_layers <- if(!anyNA(depth_vals)) length(depth_vals) else 1
n_layers_per_time <- n_vars * n_depth_layers
df_long <- df_long %>%
mutate(
layer_num = as.numeric(gsub(".*_(\\d+)$", "\\1", layer)),
time_idx = ceiling(layer_num / n_layers_per_time),
var_depth_idx = ((layer_num - 1) %% n_layers_per_time) + 1,
var_idx = ceiling(var_depth_idx / n_depth_layers),
depth_idx = ((var_depth_idx - 1) %% n_depth_layers) + 1,
time = time[time_idx],
variable = if(length(var_names) > 0) var_names[var_idx] else paste0("var", var_idx),
depth = if(!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
) %>%
select(-var_depth_idx, -var_idx, -depth_idx, -layer_num)
View(df_long)
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
View(nc)
var_names <- names(nc$var)
lon <- ncvar_get(nc, "lon")
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
var_names <- names(nc$var)
lon <- ncvar_get(nc, "lon")
tim <- ncvar_get(nc, "depth")
depth <- ncvar_get(nc, "depth")
lon <- ncvar_get(nc, "lon")
View(nc)
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(dat, "so")
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(dat)
tim <- ncvar_get(nc, "time")
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
Dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
library(data.table)
Dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
View(so_dt)
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1900-01-01") + as.numeric(time)]
View(nc)
so_dt[, date := as.Date("1950-01-01") + as.numeric(time)]
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(dat)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + as.numeric(time)]
so_dt[, time := NULL]
View(so_dt)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + time / 24]
so_dt[, time := NULL]
View(so_dt)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + time / 24]
so_dt[, time := NULL]
dimnames(sst)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
sst_dt <- as.data.table(data.table::melt(sst, value.name = "sst"))
setnames(sst_dt, c("lon", "lat", "depth", "time", "sst"))
sst_dt[, date := as.Date("1950-01-01") + time / 24]
sst_dt[, time := NULL]
dimnames(uo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
uo_dt <- as.data.table(data.table::melt(uo, value.name = "uo"))
setnames(uo_dt, c("lon", "lat", "depth", "time", "uo"))
uo_dt[, date := as.Date("1950-01-01") + time / 24]
uo_dt[, time := NULL]
dimnames(vo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
vo_dt <- as.data.table(data.table::melt(vo, value.name = "vo"))
setnames(vo_dt, c("lon", "lat", "depth", "time", "vo"))
vo_dt[, date := as.Date("1950-01-01") + time / 24]
vo_dt[, time := NULL]
View(so_dt)
View(sst_dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth == 0.494025)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth == "0.494025")
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth < 1)
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
select(-c("depth"))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo"))
View(dt)
str(dt)
library(lubridate)
library(stringr)
library(readxl)
# Definir directorios según usuario
usuario <- Sys.info()[["user"]]
# computador <- Sys.info()[["nodename"]]  # Alternativamente puedes usar esto
if (usuario == "felip") {
dirdata <- "C:/Users/felip/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/"
} else if (usuario == "FACEA") {
dirdata <- "C:/Users/FACEA/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/"
} else {
stop("Usuario no reconocido. Defina el directorio correspondiente.")
}
rm(usuario)
#Anchovy and sardine biomass
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
anch_sard_biomass <- anch_sard_biomass[, c(1, 2, 3, 4)]
anch_sard_biomass <- anch_sard_biomass[-1, ]
colnames(anch_sard_biomass) <- c("year", "cruise", "sardine_biomass", "anchoveta_biomass")
anch_sard_biomass <- anch_sard_biomass %>%
filter(str_detect(cruise, "Reclas")) %>%  ## Summer survey!
dplyr::select(-c(cruise)) %>%
mutate(across(ends_with("biomass"), ~as.numeric(.)))
anch_sard_biomass$year <- as.numeric(anch_sard_biomass$year)
#Jurel biomass
jurel_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "JUREL")
jurel_biomass <- jurel_biomass[, c(1, 3)]
jurel_biomass <- jurel_biomass[-1, ]
colnames(jurel_biomass) <- c("year", "jurel_biomass")
jurel_biomass <- jurel_biomass %>%
mutate(across(ends_with("biomass"), ~as.numeric(.))) %>%
mutate(jurel_biomass = ifelse(jurel_biomass == 0, NA, jurel_biomass))
jurel_biomass$year <- as.numeric(jurel_biomass$year)
# Merge databse
biomass <- full_join(anch_sard_biomass, jurel_biomass, by = c("year")) %>% arrange(year)
rm(list = c("anch_sard_biomass", "jurel_biomass"))
View(biomass)
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
View(anch_sard_biomass)
script_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
library(wooldridge)   # Para cargar el conjunto de datos Card
library(AER)          # Para la función ivreg (regresión IV)
data("card", package = "wooldridge")
force(card)
View(card)
modelo_causal <- lm(wage ~ educ + exper + black + south + married + smsa, data = card)
summary(modelo_causal)
modelo_primera_etapa <- lm(educ ~ nearc4 + exper + black + south + married + smsa, data = card)
summary(modelo_primera_etapa)
mean_educ_0 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 0], na.rm = TRUE)
mean_educ_1 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 1], na.rm = TRUE)
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de Educación por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de Educación") +
theme_minimal()
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de Educación por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de Educación") +
theme_minimal()
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de Educación por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de Educación") +
theme_minimal()
library(ggplot2)
################
### IV: 2SLS ###
################
script_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
####
# Minimos cuadrados de dos etapas
####
# Cargar librerías necesarias
library(wooldridge)   # Para cargar el conjunto de datos Card
library(AER)          # Para la función ivreg (regresión IV)
library(modelsummary)  # Para crear tablas de modelos
library(flextable)     # Para exportar la tabla a Word
library(officer)       # Para trabajar con documentos Word
# Cargar el conjunto de datos Card del paquete wooldridge
data("card", package = "wooldridge")
# Ajuste de la primera etapa: efecto de 'nearc2' sobre 'educ'
modelo_causal <- lm(wage ~ educ + exper + black + south + married + smsa, data = card)
summary(modelo_causal)
modelo_primera_etapa <- lm(educ ~ nearc4 + exper + black + south + married + smsa, data = card)
summary(modelo_primera_etapa)
# Grafico
mean_educ_0 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 0], na.rm = TRUE)
mean_educ_1 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 1], na.rm = TRUE)
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de Educación por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de Educación") +
theme_minimal()
library("raster")
r = raster("C:/Users/felip/Downloads/thetao_ssp585_2020_2100_depthsurf_fab4_0d97_70db_U1756051712162.nc")
install.packages("ncdf4")
r = raster("C:/Users/felip/Downloads/thetao_ssp585_2020_2100_depthsurf_fab4_0d97_70db_U1756051712162.nc")
View(r)
dt[, `:=`(
year  = year(date),
month = month(date)
)]
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo")) %>%
mutate(bad_weather = ifelse(current_speed > 1))
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo")) %>%
mutate(bad_weather = ifelse(current_speed > 1, 1, 0))
View(dt)
library(dplyr)
library(ncdf4)
library(data.table)
library(lubridate)
f <- "C:\Users\felip\OneDrive - Universidad de Concepción\FONDECYT Iniciacion\Data\Environmental\cmems_mod_glo_phy_my_0.083deg_P1D-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-30.nc"
library(dplyr)
library(ncdf4)
library(data.table)
library(lubridate)
f <- "C:/Users/felip/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/Environmental/cmems_mod_glo_phy_my_0.083deg_P1D-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-30.nc"
nc <- ncdf4::nc_open(f)
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
View(nc)
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
ncdf4::nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
View(so_dt)
View(so_dt)
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + time / 24]
so_dt[, time := NULL]
dimnames(sst)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
sst_dt <- as.data.table(data.table::melt(sst, value.name = "sst"))
setnames(sst_dt, c("lon", "lat", "depth", "time", "sst"))
sst_dt[, date := as.Date("1950-01-01") + time / 24]
sst_dt[, time := NULL]
dimnames(uo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
uo_dt <- as.data.table(data.table::melt(uo, value.name = "uo"))
setnames(uo_dt, c("lon", "lat", "depth", "time", "uo"))
uo_dt[, date := as.Date("1950-01-01") + time / 24]
uo_dt[, time := NULL]
dimnames(vo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
vo_dt <- as.data.table(data.table::melt(vo, value.name = "vo"))
setnames(vo_dt, c("lon", "lat", "depth", "time", "vo"))
vo_dt[, date := as.Date("1950-01-01") + time / 24]
vo_dt[, time := NULL]
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo")) %>%
mutate(bad_weather = ifelse(current_speed > 1, 1, 0))
dt[, `:=`(
year  = year(date),
month = month(date)
)]
View(dt)
dt <- dt %>%
select(-c("bad_weather"))
saveRDS(df, file = "data\env\glorys_daily_data.rds")
saveRDS(df, file = "data/env/glorys_daily_data.rds")
saveRDS(df, file = "data/env/glorysDaily_2012_2021.rds")
###----------------------------------------------###
###           Environmental covariates           ###
###----------------------------------------------###
library(dplyr)
library(ncdf4)
library(data.table)
library(lubridate)
