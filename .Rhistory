select(strategy, n_before, percent_before, n_after, percent_after) %>%
kable("latex", booktabs = TRUE, digits = 1,
col.names = c("Strategy", "n", "%", "n", "%"),
caption = "Comparison of Strategies Before and After -- Small-scale vessels") %>%
add_header_above(c(" " = 1, "Before" = 2, "After" = 2)) %>%
kable_styling(font_size = 10)
rm(strategy_table_art)
library(kableExtra)
library(stringr)
# Rename for joining
before <- strategy_percent_before %>%
rename(strategy = strategy_Before, n_before = n, percent_before = percent)
after <- strategy_percent %>%
rename(strategy = strategy_After, n_after = n, percent_after = percent)
# Merge strategies
strategy_summary <- full_join(before, after, by = c("strategy", "TIPO_FLOTA")) %>%
arrange(desc(coalesce(percent_after, 0) + coalesce(percent_before, 0))) %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))
# Filter only IND
strategy_table_ind <- strategy_summary %>%
filter(TIPO_FLOTA == "IND") %>%
ungroup() %>%
select(-TIPO_FLOTA)
rm(strategy_summary, strategy_percent, strategy_percent_before, after, before)
# Create table with grouped columns
strategy_table_ind %>%
select(strategy, n_before, percent_before, n_after, percent_after) %>%
kable("latex", booktabs = TRUE, digits = 1,
col.names = c("Strategy", "n", "%", "n", "%"),
caption = "Comparison of Strategies Before and After -- Industrial vessels") %>%
add_header_above(c(" " = 1, "Before" = 2, "After" = 2)) %>%
kable_styling(font_size = 10)
rm(strategy_table_ind)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
library(patchwork)
library(ggrepel)
strategy_transitions <- full_join(strategy_before, strategy_after, by = c("COD_BARCO", "TIPO_FLOTA")) %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
) %>% filter(TIPO_FLOTA == "ART")
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
simplify_focus_strategy <- function(strategy) {
ifelse(strategy == "Only Sardine", "Sardine",
ifelse(strategy == "Only Anchoveta", "Anchoveta",
ifelse(strategy == "Only JackMackerel", "JackMackerel",
ifelse(grepl("Sardine", strategy) & grepl("Anchoveta", strategy) & grepl("JackMackerel", strategy),
"Sardine, JackMackerel & Anchoveta",
ifelse(grepl("Sardine", strategy) & grepl("Anchoveta", strategy), "Sardine & Anchoveta",
ifelse(grepl("Sardine", strategy) & grepl("JackMackerel", strategy), "Sardine & JackMackerel",
ifelse(grepl("JackMackerel", strategy) & grepl("Anchoveta", strategy), "JackMackerel & Anchoveta",
ifelse(strategy == "No fishing", "No fishing", "Other"))))))))
}
strategy_transitions_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple = simplify_focus_strategy(strategy_After)
)
# %>%
#   filter(strategy_Before_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "Sardine & JackMackerel", "JackMackerel & Anchoveta", "Sardine, JackMackerel & Anchoveta","No fishing") |
#            strategy_After_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "Sardine & JackMackerel", "JackMackerel & Anchoveta", "Sardine, JackMackerel & Anchoveta","No fishing"))
transition_counts_focus <- strategy_transitions_focus %>%
count(strategy_Before_simple, strategy_After_simple)
# Base plot
p <- ggplot(transition_counts_focus,
aes(axis1 = strategy_Before_simple,
axis2 = strategy_After_simple,
y = n)) +
geom_flow(aes(fill = strategy_Before_simple),
width = 1/12, knot.pos = 0.4, alpha = 0.8) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
scale_x_discrete(limits = c("2012–2018", "2019–2024"),
expand = c(.25, .25)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of Vessels") +
theme_minimal(base_size = 12) +
theme(
legend.position = "none",
panel.grid = element_blank()
)
# Extraer posiciones de etiquetas
stratum_data <- ggplot_build(p)$data[[2]]
left_labels <- stratum_data %>%
filter(x == 1) %>%
mutate(x = x - 0.05,
stratum = str_wrap(stratum, width = 20))
right_labels <- stratum_data %>%
filter(x == 2) %>%
mutate(x = x + 0.05,
stratum = str_wrap(stratum, width = 20))
# Agregar etiquetas con repel
p +
geom_text_repel(
data = left_labels,
aes(x = x, y = y, label = stratum),
inherit.aes = FALSE,
hjust = 1, nudge_x = -0.1, direction = "y",
size = 2.5, segment.color = "grey60", segment.size = 0.3
) +
geom_text_repel(
data = right_labels,
aes(x = x, y = y, label = stratum),
inherit.aes = FALSE,
hjust = 0, nudge_x = 0.1, direction = "y",
size = 2.5, segment.color = "grey60", segment.size = 0.3
)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
library(patchwork)
library(ggrepel)
strategy_transitions <- full_join(strategy_before, strategy_after, by = c("COD_BARCO", "TIPO_FLOTA")) %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
) %>% filter(TIPO_FLOTA == "IND")
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
simplify_focus_strategy <- function(strategy) {
ifelse(strategy == "Only Sardine", "Sardine",
ifelse(strategy == "Only Anchoveta", "Anchoveta",
ifelse(strategy == "Only JackMackerel", "JackMackerel",
ifelse(grepl("Sardine", strategy) & grepl("Anchoveta", strategy) & grepl("JackMackerel", strategy),
"Sardine, JackMackerel & Anchoveta",
ifelse(grepl("Sardine", strategy) & grepl("Anchoveta", strategy), "Sardine & Anchoveta",
ifelse(grepl("Sardine", strategy) & grepl("JackMackerel", strategy), "Sardine & JackMackerel",
ifelse(grepl("JackMackerel", strategy) & grepl("Anchoveta", strategy), "JackMackerel & Anchoveta",
ifelse(strategy == "No fishing", "No fishing", "Other"))))))))
}
strategy_transitions_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple = simplify_focus_strategy(strategy_After)
)
# %>%
#   filter(strategy_Before_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "Sardine & JackMackerel", "JackMackerel & Anchoveta", "Sardine, JackMackerel & Anchoveta","No fishing") |
#            strategy_After_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "Sardine & JackMackerel", "JackMackerel & Anchoveta", "Sardine, JackMackerel & Anchoveta","No fishing"))# %>%
#   filter(strategy_Before_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "Sardine & JackMackerel", "JackMackerel & Anchoveta", "Sardine, JackMackerel & Anchoveta","No fishing") |
#            strategy_After_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "Sardine & JackMackerel", "JackMackerel & Anchoveta", "Sardine, JackMackerel & Anchoveta","No fishing"))
transition_counts_focus <- strategy_transitions_focus %>%
count(strategy_Before_simple, strategy_After_simple)
# Base plot
p <- ggplot(transition_counts_focus,
aes(axis1 = strategy_Before_simple,
axis2 = strategy_After_simple,
y = n)) +
geom_flow(aes(fill = strategy_Before_simple),
width = 1/12, knot.pos = 0.4, alpha = 0.8) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
scale_x_discrete(limits = c("2012–2018", "2019–2024"),
expand = c(.25, .25)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(x = "", y = "Number of Vessels") +
theme_minimal(base_size = 12) +
theme(
legend.position = "none",
panel.grid = element_blank()
)
# Extraer posiciones de etiquetas
stratum_data <- ggplot_build(p)$data[[2]]
left_labels <- stratum_data %>%
filter(x == 1) %>%
mutate(x = x - 0.05,
stratum = str_wrap(stratum, width = 20))
right_labels <- stratum_data %>%
filter(x == 2) %>%
mutate(x = x + 0.05,
stratum = str_wrap(stratum, width = 20))
# Agregar etiquetas con repel
p +
geom_text_repel(
data = left_labels,
aes(x = x, y = y, label = stratum),
inherit.aes = FALSE,
hjust = 1, nudge_x = -0.1, direction = "y",
size = 2.5, segment.color = "grey60", segment.size = 0.3
) +
geom_text_repel(
data = right_labels,
aes(x = x, y = y, label = stratum),
inherit.aes = FALSE,
hjust = 0, nudge_x = 0.1, direction = "y",
size = 2.5, segment.color = "grey60", segment.size = 0.3
)
rm(left_labels, right_labels, strategy_after, strategy_before, strategy_transitions, strategy_transitions_focus, stratum_data, transition_counts, transition_counts_focus, p)
rm(get_strategy, simplify_focus_strategy)
library(readxl)
library(dplyr)
harvest_IFOP_month <- readRDS("data/harvest/IFOP_month.rds")
harvest_IFOP <- readRDS("data/harvest/IFOP.rds")
harvest_SERNAPESCA <- readRDS("data/harvest/sernapesca.rds")
harvest_SERNAPESCA_v2 <- readRDS("data/harvest/sernapesca_v2.rds")
#---- IFOP loogbook data ----
harvest_IFOP_logbooks <- logbooks %>%
filter(year >= 2012) %>%
filter(REGION %in% c(5,6,7,8,9,10,14,16)) %>%
group_by(NOMBRE_ESPECIE, year) %>%
summarise(
harvest_IFOP_loogbook_centrosur = sum(CAPTURA_RETENIDA, na.rm = TRUE),
.groups = "drop"
) %>%
rename(specie = NOMBRE_ESPECIE) %>%
mutate(harvest_IFOP_loogbook_centrosur = harvest_IFOP_loogbook_centrosur / 1000)
#---- Harvest data merged ----
harvest <- left_join(harvest_SERNAPESCA_v2, harvest_SERNAPESCA, by = c("year", "specie"))
harvest <- left_join(harvest, harvest_IFOP, by = c("year", "specie"))
harvest <- left_join(harvest, harvest_IFOP_logbooks, by = c("year", "specie"))
rm(harvest_IFOP, harvest_SERNAPESCA, harvest_SERNAPESCA_v2, harvest_IFOP_logbooks)
library(dplyr)
library(stringr)
# Diccionario
month_translation <- c(
"ene" = "jan", "feb" = "feb", "mar" = "mar", "abr" = "apr",
"may" = "may", "jun" = "jun", "jul" = "jul", "ago" = "aug",
"sept" = "sep", "oct" = "oct", "nov" = "nov",
"dic" = "dec"
)
# Orden destino
month_order <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
harvest_summary <- harvest_IFOP_month %>%
mutate(
month = str_to_lower(str_trim(month)),
month = stringi::stri_trans_general(month, "Latin-ASCII"),
month = dplyr::recode(month, !!!month_translation, .default = month),
month = factor(month, levels = month_order, ordered = TRUE)
) %>%  # Translate to English
group_by(month, specie) %>%  # Make sure your column is 'species'
summarise(harvest = mean(total_harvest_IFOP_centrosur, na.rm = TRUE),
.groups = "drop") %>%
mutate(month = factor(month, levels = month_order)) %>%
mutate(specie = dplyr::recode(specie,
"ANCHOVETA" = "Anchoveta",
"SARDINA COMUN" = "Sardine",
"JUREL" = "Jack Mackerel"))
# Plot with facets by species
ggplot(harvest_summary, aes(x = month, y = harvest, fill = specie)) +
geom_bar(stat = "identity") +
facet_wrap(~ specie, scales = "free_y", ncol = 1) +
labs(x = "Month", y = "Average Harvest (tons)", fill = "Specie") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
rm(harvest_IFOP_month, harvest_summary, month_order, month_translation, months)
knitr::include_graphics("figs/env_data_map.pdf")
library(ggplot2)
library(tidyr)
library(scales)
library(viridis)
biomass_long <- biomass %>%
pivot_longer(cols = c(sardine_biomass, anchoveta_biomass, jurel_biomass_cs, jurel_biomass_cs_intra),
names_to = "species",
values_to = "biomass") %>%
filter(!is.na(biomass)) %>%
arrange(species, year)
biomass_long$biomass <- as.numeric(biomass_long$biomass)
biomass_long$year <- as.numeric(biomass_long$year)
biomass_long$species <- dplyr::recode(biomass_long$species,
sardine_biomass = "Sardine",
anchoveta_biomass = "Anchoveta",
jurel_biomass_cs = "Jack Mackerel",
jurel_biomass_cs_intra = "Jack Mackerel (intrapolated)")
biomass <- biomass_long %>% filter(species %in% c("Sardine", "Anchoveta", "Jack Mackerel", "Jack Mackerel (intrapolated)"))
# Plot
ggplot(biomass, aes(x = year, y = biomass, color = species, group = species)) +
geom_smooth(se = TRUE, method = "loess", span = 0.4, linetype = "solid") +
scale_y_continuous(labels = scales::comma) +  # Or use scale_y_log10(labels = comma) to compress
labs(x = "Year",
y = "Biomass (tons)",
color = "Species") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 0, hjust = 1),
legend.position = "right"
) +
scale_color_viridis_d(option = "D")
rm(list = c("biomass_long"))
library(tidyverse)
harvest2 <- harvest %>%
select(c(specie, year, total_harvest_sernapesca_v2_centro_sur)) %>%
mutate(specie = dplyr::recode(specie,
"SARDINA COMUN" = "Sardine",
"JUREL" = "Jack Mackerel",
"ANCHOVETA" = "Anchoveta"
)) %>%
rename(harvest = total_harvest_sernapesca_v2_centro_sur) %>%
rename(species = specie)
harvest2 <- bind_rows(
harvest2,
harvest2 %>%
filter(species == "Jack Mackerel") %>%
mutate(species = "Jack Mackerel (intrapolated)")
)
biomass_harvest <- full_join(biomass, harvest2, by = c("species" = "species", "year" = "year")) %>% arrange(species, year)
biomass_harvest_long <- biomass_harvest %>%
pivot_longer(cols = c(biomass, harvest),
names_to = "variable",
values_to = "value")
ggplot(biomass_harvest_long, aes(x = year, y = value, color = variable)) +
geom_line(size = 1, na.rm = TRUE) +
# geom_point(size = 2, na.rm = TRUE) +
# geom_smooth(se = FALSE, span = 0.4, method = "loess", na.rm = TRUE) + # <- smoothing
facet_wrap(~species, scales = "free_y") +
labs(x = "Year", y = "Value (tons)", color = "Variable") +
scale_color_manual(values = c("biomass" = "darkgreen", "harvest" = "steelblue")) +
theme_minimal() +
theme(legend.position = "top")
rm(biomass_harvest_long, harvest2)
library(tidyverse)
library(janitor)
# --- 1. Limpieza y preparación de datos ----
biomass_harvest_wide <- biomass_harvest %>%
mutate(species = gsub("[^A-Za-z0-9]", "", tolower(species))) %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(biomass_t1 = lead(biomass)) %>%
ungroup() %>%
pivot_wider(
names_from = species,
values_from = c(biomass, harvest, biomass_t1),
names_sep = "_"
) %>%
janitor::clean_names()
# Biomasa total sin cosecha
biomass_harvest_wide <- biomass_harvest_wide %>%
mutate(
biomass_t1_sardine_noharvest      = biomass_t1_sardine + harvest_sardine,
biomass_t1_anchoveta_noharvest    = biomass_t1_anchoveta + harvest_anchoveta,
biomass_t1_jackmackerel_noharvest = biomass_t1_jackmackerelintrapolated + harvest_jackmackerelintrapolated
)
# Obtener datos ambientales
env_dt_year1 <- env_dt %>%
mutate(year = year(date)) %>%
group_by(year) %>%
summarize(sst = mean(sst, na.rm = TRUE),
chl = mean(chl, na.rm = TRUE),
wind = mean(speed_max, na.rm = TRUE))
env_dt_year2 <- env_dt_00_11 %>%
mutate(year = year(date)) %>%
group_by(year) %>%
summarize(sst = mean(sst, na.rm = TRUE),
chl = mean(chl, na.rm = TRUE),
wind = mean(speed_max, na.rm = TRUE))
env_dt_year <- rbind(env_dt_year2, env_dt_year1)
biomass_harvest <- left_join(biomass_harvest_wide, env_dt_year, by = "year")
rm(env_dt_year, env_dt_year2, env_dt_year1, env_dt_00_11, biomass_harvest_wide)
library(tidyverse)
sur_df <- biomass_harvest %>%
select(
year,
biomass_t1_sardine_noharvest,
biomass_t1_anchoveta_noharvest,
biomass_t1_jackmackerel_noharvest,
biomass_sardine,
biomass_anchoveta,
biomass_jackmackerelintrapolated,
sst, chl, wind
) %>%
drop_na() %>%
mutate(
sst_c  = sst - mean(sst, na.rm = TRUE),
chl_c  = chl - mean(chl, na.rm = TRUE),
wind_c = wind - mean(wind, na.rm = TRUE),
sst_c2 = sst_c^2,
chl_c2 = chl_c^2,
wind_c2 = wind_c^2,
biomass_t1_sardine_noharvest =  biomass_t1_sardine_noharvest / 1e5,
biomass_t1_anchoveta_noharvest = biomass_t1_anchoveta_noharvest / 1e5,
biomass_t1_jackmackerel_noharvest = biomass_t1_jackmackerel_noharvest / 1e5,
biomass_sardine = biomass_sardine / 1e5,
biomass_anchoveta = biomass_anchoveta / 1e5,
biomass_jackmackerelintrapolated = biomass_jackmackerelintrapolated / 1e5,
biomass_sardine_c = biomass_sardine - mean(biomass_sardine, na.rm = TRUE),
biomass_anchoveta_c = biomass_anchoveta - mean(biomass_anchoveta, na.rm = TRUE),
biomass_jackmackerelintrapolated_c = biomass_jackmackerelintrapolated - mean(biomass_jackmackerelintrapolated, na.rm = TRUE))
library(systemfit)
eq_sardine <- biomass_t1_sardine_noharvest ~
biomass_sardine_c + I(biomass_sardine_c^2) +
sst_c + sst_c2 + chl_c + chl_c2 + wind_c + wind_c2 +
biomass_sardine_c:biomass_anchoveta_c +
biomass_sardine_c:biomass_jackmackerelintrapolated_c
eq_anchoveta <- biomass_t1_anchoveta_noharvest ~
biomass_anchoveta_c + I(biomass_anchoveta_c^2) +
sst_c + sst_c2 + chl_c + chl_c2 + wind_c + wind_c2 +
biomass_sardine_c:biomass_anchoveta_c +
biomass_anchoveta_c:biomass_jackmackerelintrapolated_c
eq_jack <- biomass_t1_jackmackerel_noharvest ~
biomass_jackmackerelintrapolated_c + I(biomass_jackmackerelintrapolated_c^2) +
sst_c + sst_c2 + chl_c + chl_c2 + wind_c + wind_c2 +
biomass_sardine_c:biomass_jackmackerelintrapolated_c +
biomass_anchoveta_c:biomass_jackmackerelintrapolated_c
fit_sur <- systemfit(
list(
sardine      = eq_sardine,
anchoveta    = eq_anchoveta,
jackmackerel = eq_jack
),
data = sur_df,
method = "SUR"
)
summary(fit_sur)
# --- Helper to build and fit SUR models with/without selected blocks ----
library(systemfit)
# 1. Builder of formulas given switches
build_eqs <- function(include_wind = TRUE,
include_sst = TRUE,
include_chl = TRUE,
include_interactions = TRUE) {
sard_terms <- c("biomass_sardine_c", "I(biomass_sardine_c^2)",
if (include_interactions) c("biomass_sardine_c:biomass_jackmackerelintrapolated_c",
"biomass_sardine_c:biomass_anchoveta_c"),
if (include_sst) c("sst_c", "sst_c2"),
if (include_chl) c("chl_c", "chl_c2"),
if (include_wind) c("wind_c", "wind_c2"))
anch_terms <- c("biomass_anchoveta_c", "I(biomass_anchoveta_c^2)",
if (include_interactions) c("biomass_anchoveta_c:biomass_jackmackerelintrapolated_c",
"biomass_sardine_c:biomass_anchoveta_c"),
if (include_sst) c("sst_c", "sst_c2"),
if (include_chl) c("chl_c", "chl_c2"),
if (include_wind) c("wind_c", "wind_c2"))
jack_terms <- c("biomass_jackmackerelintrapolated_c", "I(biomass_jackmackerelintrapolated_c^2)",
if (include_interactions) c("biomass_sardine_c:biomass_jackmackerelintrapolated_c",
"biomass_anchoveta_c:biomass_jackmackerelintrapolated_c"),
if (include_sst) c("sst_c", "sst_c2"),
if (include_chl) c("chl_c", "chl_c2"),
if (include_wind) c("wind_c", "wind_c2"))
f <- function(y, xs) as.formula(paste(y, "~", paste(xs, collapse = " + ")))
list(
sardine   = f("biomass_t1_sardine_noharvest", sard_terms),
anchoveta = f("biomass_t1_anchoveta_noharvest", anch_terms),
jack      = f("biomass_t1_jackmackerel_noharvest", jack_terms)
)
}
# 2. Fit the SUR given switches
fit_sur_with <- function(include_wind = TRUE,
include_sst = TRUE,
include_chl = TRUE,
include_interactions = TRUE,
data = sur_df) {
eqs <- build_eqs(include_wind, include_sst, include_chl, include_interactions)
systemfit(
list(
sardine      = eqs$sardine,
anchoveta    = eqs$anchoveta,
jackmackerel = eqs$jack
),
data = data,
method = "SUR"
)
}
# 3. Nested F-test between full and restricted systems
nested_F <- function(fit_full, fit_restr) {
SSR_full  <- sum(sapply(fit_full$eq,  function(m) sum(resid(m)^2)))
SSR_restr <- sum(sapply(fit_restr$eq, function(m) sum(resid(m)^2)))
df_full   <- sum(sapply(fit_full$eq,  function(m) df.residual(m)))
k_full    <- sum(sapply(fit_full$eq,  function(m) length(coef(m))))
k_restr   <- sum(sapply(fit_restr$eq, function(m) length(coef(m))))
q <- k_full - k_restr
F_stat <- ((SSR_restr - SSR_full)/q) / (SSR_full/df_full)
p_val  <- pf(F_stat, q, df_full, lower.tail = FALSE)
data.frame(
Restrictions = q,
df2 = df_full,
F = F_stat,
p_value = p_val
)
}
fit_no_wind <- fit_sur_with(include_wind = FALSE,
include_sst = TRUE,
include_chl = TRUE,
include_interactions = TRUE,
data = sur_df)
summary(fit_no_wind)
nested_F(fit_sur, fit_no_wind)
nested_F(fit_sur, fit_no_wind)
fit_no_env <- fit_sur_with(include_wind = FALSE,
include_sst = FALSE,
include_chl = FALSE,
include_interactions = TRUE,
data = sur_df)
nested_F(fit_nowind, fit_no_env)
summary(fit_no_env)
nested_F(fit_no_wind, fit_no_env)
nested_F(fit_no_wind, fit_no_env)
rm(list = ls())
gc()
usuario <- Sys.info()[["user"]]
# computador <- Sys.info()[["nodename"]]  # Alternativamente puedes usar esto
if (usuario == "felip") {
dirdata <- "C:/Users/felip/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/"
} else if (usuario == "FACEA") {
dirdata <- "C:/Users/FACEA/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/"
} else {
stop("Usuario no reconocido. Defina el directorio correspondiente.")
}
rm(usuario)
library(readxl)
library(dplyr)
library(tidyr)
library(stringi)
harvest_SERNAPESCA_v2 <- read.csv(
file.path(dirdata, "SERNAPESCA", "bd_desembarque.csv"),
fileEncoding = "Latin1",
sep = ";")
View(harvest_SERNAPESCA_v2)
env_dt <- readRDS("data/env/EnvCoastDaily_2012_2025_0.125deg.rds")
View(env_dt)
