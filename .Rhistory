mutate(species_share_check = sum(species_share, na.rm = TRUE)) %>%
filter(species_share_check > 0) %>%
dplyr::select(-c(species_share_check)) %>%
group_by(COD_BARCO, NOMBRE_ESPECIE) %>%
summarize(species_share = mean(species_share, na.rm = TRUE)) %>%
pivot_wider(
names_from = NOMBRE_ESPECIE,
values_from = species_share,
values_fill = 0) %>%
dplyr::select(c(COD_BARCO, ANCHOVETA, `SARDINA COMUN`, JUREL)) %>%
mutate(OTHER = 1 - ANCHOVETA - `SARDINA COMUN` - JUREL) %>%
rename(
Anchoveta = `ANCHOVETA`,
Sardine = `SARDINA COMUN`,
JackMackerel = `JUREL`,
Other = `OTHER`
)
vessel_species_year_pre <- vessel_species_year %>%
mutate(strategy_Before = pmap_chr(
list(Sardine, JackMackerel, Anchoveta, Other),
get_strategy
))
strategy_percent_pre <- vessel_species_year_pre %>%
group_by(strategy_Before) %>%
summarise(n = n(), .groups = "drop") %>%
mutate(percent = round(100 * n / sum(n), 1)) %>%
arrange(desc(percent))
strategy_before <- vessel_species_year_pre %>%
select(COD_BARCO, strategy_Before)
View(strategy_percent_pre)
View(strategy_percent)
View(strategy_percent)
str(strategy_percent)
str(strategy_percent_pre)
before <- strategy_before %>%
rename(strategy = strategy_Before, n_before = n, percent_before = percent)
View(strategy_percent)
View(strategy_percent_pre)
View(strategy_before)
# Rename for joining
before <- strategy_percent_pre %>%
rename(strategy = strategy_Before, n_before = n, percent_before = percent)
after <- strategy_percent %>%
rename(strategy = strategy_After, n_after = n, percent_after = percent)
# Merge strategies
strategy_summary <- full_join(before, after, by = "strategy") %>%
arrange(desc(coalesce(percent_after, 0) + coalesce(percent_before, 0))) %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))
View(strategy_summary)
before <- strategy_percent_pre %>%
rename(strategy = strategy_Before, n_before = n, percent_before = percent)
after <- strategy_percent %>%
rename(strategy = strategy_After, n_after = n, percent_after = percent)
# Merge strategies
strategy_summary <- full_join(before, after, by = "strategy") %>%
arrange(desc(coalesce(percent_before, 0) + coalesce(percent_after, 0))) %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))
kable(strategy_summary, digits = 1, caption = "Comparison of Fishing Strategies Before and After")
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
# Rename for joining
before <- strategy_percent_pre %>%
rename(strategy = strategy_Before, n_before = n, percent_before = percent)
after <- strategy_percent %>%
rename(strategy = strategy_After, n_after = n, percent_after = percent)
# Merge strategies
strategy_summary <- full_join(before, after, by = "strategy") %>%
arrange(desc(coalesce(percent_after, 0) + coalesce(percent_before, 0))) %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))
# Create table with grouped columns
strategy_summary %>%
select(strategy, n_before, percent_before, n_after, percent_after) %>%
kable(digits = 1, align = "lrrrr",
col.names = c("Strategy", "n", "%", "n", "%"),
caption = "Comparison of Strategies Before and After") %>%
add_header_above(c(" " = 1, "Before" = 2, "After" = 2))
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
# Rename for joining
before <- strategy_percent_pre %>%
rename(strategy = strategy_Before, n_before = n, percent_before = percent)
after <- strategy_percent %>%
rename(strategy = strategy_After, n_after = n, percent_after = percent)
# Merge strategies
strategy_summary <- full_join(before, after, by = "strategy") %>%
arrange(desc(coalesce(percent_after, 0) + coalesce(percent_before, 0))) %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))
# Create table with grouped columns
strategy_summary %>%
select(strategy, n_before, percent_before, n_after, percent_after) %>%
kable("latex", booktabs = TRUE, digits = 1,
col.names = c("Strategy", "n", "%", "n", "%"),
caption = "Comparison of Strategies Before and After") %>%
add_header_above(c(" " = 1, "Before" = 2, "After" = 2))
tinytex::tlmgr_repo("https://mirror.ctan.org/systems/texlive/tlnet")
View(strategy_summary)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
# Rename for joining
before <- strategy_percent_pre %>%
rename(strategy = strategy_Before, n_before = n, percent_before = percent)
after <- strategy_percent %>%
rename(strategy = strategy_After, n_after = n, percent_after = percent)
# Merge strategies
strategy_summary <- full_join(before, after, by = "strategy") %>%
arrange(desc(coalesce(percent_after, 0) + coalesce(percent_before, 0))) %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))
# Create table with grouped columns
strategy_summary %>%
select(strategy, n_before, percent_before, n_after, percent_after) %>%
kable("latex", booktabs = TRUE, digits = 1,
longtable = FALSE,                      # ðŸ‘ˆ Disable longtable
col.names = c("Strategy", "n", "%", "n", "%"),
caption = "Comparison of Strategies Before and After") %>%
add_header_above(c(" " = 1, "Before" = 2, "After" = 2)) %>%
kable_styling(latex_options = c("hold_position"), font_size = 9)
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
simplify_focus_strategy <- function(strategy) {
if (strategy == "Only Sardine") return("Sardine")
if (strategy == "Only Anchoveta") return("Anchoveta")
if (grepl("Sardine", strategy) & grepl("Anchoveta", strategy)) return("Sardine & Anchoveta")
if (strategy == "No fishing") return("No fishing")
return("Other")
}
strategy_transitions_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple = simplify_focus_strategy(strategy_After)
) %>%
filter(strategy_Before_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "No fishing") |
strategy_After_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "No fishing"))
transition_counts_focus <- strategy_transitions_focus %>%
count(strategy_Before_simple, strategy_After_simple)
# Create the base plot object
p <- ggplot(transition_counts_focus,
aes(axis1 = strategy_Before_simple, axis2 = strategy_After_simple, y = n)) +
geom_flow(aes(fill = strategy_Before_simple), width = 1/12, knot.pos = 0.4, alpha = 0.8) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
scale_x_discrete(limits = c("2012â€“2018", "2019â€“2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(
x = "", y = "Number of Vessels"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "none",
panel.grid = element_blank()
)
# Get label positions from the stratum data
stratum_data <- ggplot_build(p)$data[[2]]
# Separate left (axis1) and right (axis2) sides
left_labels <- stratum_data %>%
filter(x == 1) %>%
mutate(hjust = 1, x = x - 0.05)  # shift left
right_labels <- stratum_data %>%
filter(x == 2) %>%
mutate(hjust = 0, x = x + 0.05)  # shift right
# Add to the plot
p +
geom_text(data = left_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.5, inherit.aes = FALSE) +
geom_text(data = right_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.5, inherit.aes = FALSE)
strategy_transitions <- full_join(strategy_before, strategy_after, by = "COD_BARCO") %>%
mutate(
strategy_Before = ifelse(is.na(strategy_Before), "No fishing", strategy_Before),
strategy_After  = ifelse(is.na(strategy_After),  "No fishing", strategy_After)
)
transition_counts <- strategy_transitions %>%
count(strategy_Before, strategy_After)
simplify_focus_strategy <- function(strategy) {
if (strategy == "Only Sardine") return("Sardine")
if (strategy == "Only Anchoveta") return("Anchoveta")
if (grepl("Sardine", strategy) & grepl("Anchoveta", strategy)) return("Sardine & Anchoveta")
if (strategy == "No fishing") return("No fishing")
return("Other")
}
strategy_transitions_focus <- strategy_transitions %>%
mutate(
strategy_Before_simple = simplify_focus_strategy(strategy_Before),
strategy_After_simple = simplify_focus_strategy(strategy_After)
) %>%
filter(strategy_Before_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "No fishing") |
strategy_After_simple %in% c("Sardine", "Anchoveta", "Sardine & Anchoveta", "No fishing"))
transition_counts_focus <- strategy_transitions_focus %>%
count(strategy_Before_simple, strategy_After_simple)
# Create the base plot object
p <- ggplot(transition_counts_focus,
aes(axis1 = strategy_Before_simple, axis2 = strategy_After_simple, y = n)) +
geom_flow(aes(fill = strategy_Before_simple), width = 1/12, knot.pos = 0.4, alpha = 0.8) +
geom_stratum(width = 1/12, fill = "gray95", color = "black") +
scale_x_discrete(limits = c("2012â€“2018", "2019â€“2024"), expand = c(.15, .15)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
labs(
x = "", y = "Number of Vessels"
) +
theme_minimal(base_size = 10) +
theme(
legend.position = "none",
panel.grid = element_blank()
)
# Get label positions from the stratum data
stratum_data <- ggplot_build(p)$data[[2]]
# Separate left (axis1) and right (axis2) sides
left_labels <- stratum_data %>%
filter(x == 1) %>%
mutate(hjust = 1, x = x - 0.05)  # shift left
right_labels <- stratum_data %>%
filter(x == 2) %>%
mutate(hjust = 0, x = x + 0.05)  # shift right
# Add to the plot
p +
geom_text(data = left_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.5, inherit.aes = FALSE) +
geom_text(data = right_labels, aes(x = x, y = y, label = stratum, hjust = hjust),
size = 2.5, inherit.aes = FALSE)
#Anchovy and sardine biomass
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
anch_sard_biomass <- anch_sard_biomass[, c(1, 2, 3, 4)]
anch_sard_biomass <- anch_sard_biomass[-1, ]
colnames(anch_sard_biomass) <- c("year", "cruise", "sardine_biomass", "anchoveta_biomass")
anch_sard_biomass <- anch_sard_biomass %>%
filter(str_detect(cruise, "Reclas")) %>%  ## Summer survey!
dplyr::select(-c(cruise)) %>%
mutate(across(ends_with("biomass"), ~as.numeric(.)))
anch_sard_biomass$year <- as.numeric(anch_sard_biomass$year)
#Jurel biomass
jurel_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "JUREL")
jurel_biomass <- jurel_biomass[, c(1, 3)]
jurel_biomass <- jurel_biomass[-1, ]
colnames(jurel_biomass) <- c("year", "jurel_biomass")
jurel_biomass <- jurel_biomass %>%
mutate(across(ends_with("biomass"), ~as.numeric(.))) %>%
mutate(jurel_biomass = ifelse(jurel_biomass == 0, NA, jurel_biomass))
jurel_biomass$year <- as.numeric(jurel_biomass$year)
# Merge databse
biomass <- full_join(anch_sard_biomass, jurel_biomass, by = c("year")) %>% arrange(year)
rm(list = c("anch_sard_biomass", "jurel_biomass"))
rm(list = ls())
gc()
library(readxl)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggalluvial)
library(purrr)
library(lubridate)
library(stringr)
library(readxl)
# Definir directorios segÃºn usuario
usuario <- Sys.info()[["user"]]
# computador <- Sys.info()[["nodename"]]  # Alternativamente puedes usar esto
if (usuario == "felip") {
dirdata <- "C:/Users/felip/OneDrive - Universidad de ConcepciÃ³n/FONDECYT Iniciacion/Data/"
} else if (usuario == "FACEA") {
dirdata <- "C:/Users/FACEA/OneDrive - Universidad de ConcepciÃ³n/FONDECYT Iniciacion/Data/"
} else {
stop("Usuario no reconocido. Defina el directorio correspondiente.")
}
rm(usuario)
rm(list = ls())
gc()
library(readxl)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggalluvial)
library(purrr)
library(lubridate)
library(stringr)
library(readxl)
# Definir directorios segÃºn usuario
usuario <- Sys.info()[["user"]]
# computador <- Sys.info()[["nodename"]]  # Alternativamente puedes usar esto
if (usuario == "felip") {
dirdata <- "C:/Users/felip/OneDrive - Universidad de ConcepciÃ³n/FONDECYT Iniciacion/Data/"
} else if (usuario == "FACEA") {
dirdata <- "C:/Users/FACEA/OneDrive - Universidad de ConcepciÃ³n/FONDECYT Iniciacion/Data/"
} else {
stop("Usuario no reconocido. Defina el directorio correspondiente.")
}
rm(usuario)
#Anchovy and sardine biomass
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
anch_sard_biomass <- anch_sard_biomass[, c(1, 2, 3, 4)]
anch_sard_biomass <- anch_sard_biomass[-1, ]
colnames(anch_sard_biomass) <- c("year", "cruise", "sardine_biomass", "anchoveta_biomass")
anch_sard_biomass <- anch_sard_biomass %>%
filter(str_detect(cruise, "Reclas")) %>%  ## Summer survey!
dplyr::select(-c(cruise)) %>%
mutate(across(ends_with("biomass"), ~as.numeric(.)))
anch_sard_biomass$year <- as.numeric(anch_sard_biomass$year)
#Jurel biomass
jurel_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "JUREL")
jurel_biomass <- jurel_biomass[, c(1, 3)]
jurel_biomass <- jurel_biomass[-1, ]
colnames(jurel_biomass) <- c("year", "jurel_biomass")
jurel_biomass <- jurel_biomass %>%
mutate(across(ends_with("biomass"), ~as.numeric(.))) %>%
mutate(jurel_biomass = ifelse(jurel_biomass == 0, NA, jurel_biomass))
jurel_biomass$year <- as.numeric(jurel_biomass$year)
# Merge databse
biomass <- full_join(anch_sard_biomass, jurel_biomass, by = c("year")) %>% arrange(year)
rm(list = c("anch_sard_biomass", "jurel_biomass"))
### Introduccion a R ###
##### Econometria II ####
# Leer base de datos (ojo con la direccion donde guardaron la base de datos)
library(readxl)
databse <- read_excel("C:/Users/felip/ceosal1_2.xlsx")
install.packages("here")
database <- read_excel(here("ceosal1_2.xlsx"))
library(here)
# This will look in the folder where the R project (or script) is
database <- read_excel(here("ceosal1_2.xlsx"))
script_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
database <- read_excel(file.path(script_dir, "ceosal1_2.xlsx"))
View(database)
install.packages("summarytools")
library(summarytools)
descr(ceosal1_2$sales, stats = "common")
ceosal1_2 <- read_excel(file.path(script_dir, "ceosal1_2.xlsx"))
descr(ceosal1_2$sales, stats = "common")
View(ceosal1_2)
#instal.packages("ggplot2")
library(ggplot2)
ggplot(ceosal1_2,
aes(x=sales, y = salary)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
################
### IV: 2SLS ###
################
script_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
#Anchovy and sardine biomass
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
anch_sard_biomass <- anch_sard_biomass[, c(1, 2, 3, 4)]
anch_sard_biomass <- anch_sard_biomass[-1, ]
colnames(anch_sard_biomass) <- c("year", "cruise", "sardine_biomass", "anchoveta_biomass")
anch_sard_biomass <- anch_sard_biomass %>%
filter(str_detect(cruise, "Reclas")) %>%  ## Summer survey!
dplyr::select(-c(cruise)) %>%
mutate(across(ends_with("biomass"), ~as.numeric(.)))
anch_sard_biomass$year <- as.numeric(anch_sard_biomass$year)
#Jurel biomass
jurel_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "JUREL")
jurel_biomass <- jurel_biomass[, c(1, 3)]
jurel_biomass <- jurel_biomass[-1, ]
colnames(jurel_biomass) <- c("year", "jurel_biomass")
jurel_biomass <- jurel_biomass %>%
mutate(across(ends_with("biomass"), ~as.numeric(.))) %>%
mutate(jurel_biomass = ifelse(jurel_biomass == 0, NA, jurel_biomass))
jurel_biomass$year <- as.numeric(jurel_biomass$year)
# Merge databse
biomass <- full_join(anch_sard_biomass, jurel_biomass, by = c("year")) %>% arrange(year)
rm(list = c("anch_sard_biomass", "jurel_biomass"))
rm(list = ls())
gc()
library(readxl)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggalluvial)
library(purrr)
library(lubridate)
library(stringr)
library(readxl)
# Definir directorios segÃºn usuario
usuario <- Sys.info()[["user"]]
# computador <- Sys.info()[["nodename"]]  # Alternativamente puedes usar esto
if (usuario == "felip") {
dirdata <- "C:/Users/felip/OneDrive - Universidad de ConcepciÃ³n/FONDECYT Iniciacion/Data/"
} else if (usuario == "FACEA") {
dirdata <- "C:/Users/FACEA/OneDrive - Universidad de ConcepciÃ³n/FONDECYT Iniciacion/Data/"
} else {
stop("Usuario no reconocido. Defina el directorio correspondiente.")
}
rm(usuario)
#Anchovy and sardine biomass
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
anch_sard_biomass <- anch_sard_biomass[, c(1, 2, 3, 4)]
anch_sard_biomass <- anch_sard_biomass[-1, ]
colnames(anch_sard_biomass) <- c("year", "cruise", "sardine_biomass", "anchoveta_biomass")
anch_sard_biomass <- anch_sard_biomass %>%
filter(str_detect(cruise, "Reclas")) %>%  ## Summer survey!
dplyr::select(-c(cruise)) %>%
mutate(across(ends_with("biomass"), ~as.numeric(.)))
anch_sard_biomass$year <- as.numeric(anch_sard_biomass$year)
#Jurel biomass
jurel_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "JUREL")
jurel_biomass <- jurel_biomass[, c(1, 3)]
jurel_biomass <- jurel_biomass[-1, ]
colnames(jurel_biomass) <- c("year", "jurel_biomass")
jurel_biomass <- jurel_biomass %>%
mutate(across(ends_with("biomass"), ~as.numeric(.))) %>%
mutate(jurel_biomass = ifelse(jurel_biomass == 0, NA, jurel_biomass))
jurel_biomass$year <- as.numeric(jurel_biomass$year)
# Merge databse
biomass <- full_join(anch_sard_biomass, jurel_biomass, by = c("year")) %>% arrange(year)
rm(list = c("anch_sard_biomass", "jurel_biomass"))
View(biomass)
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
View(anch_sard_biomass)
script_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
library(wooldridge)   # Para cargar el conjunto de datos Card
library(AER)          # Para la funciÃ³n ivreg (regresiÃ³n IV)
data("card", package = "wooldridge")
force(card)
View(card)
modelo_causal <- lm(wage ~ educ + exper + black + south + married + smsa, data = card)
summary(modelo_causal)
modelo_primera_etapa <- lm(educ ~ nearc4 + exper + black + south + married + smsa, data = card)
summary(modelo_primera_etapa)
mean_educ_0 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 0], na.rm = TRUE)
mean_educ_1 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 1], na.rm = TRUE)
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de EducaciÃ³n por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de EducaciÃ³n") +
theme_minimal()
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de EducaciÃ³n por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de EducaciÃ³n") +
theme_minimal()
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de EducaciÃ³n por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de EducaciÃ³n") +
theme_minimal()
library(ggplot2)
################
### IV: 2SLS ###
################
script_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
####
# Minimos cuadrados de dos etapas
####
# Cargar librerÃ­as necesarias
library(wooldridge)   # Para cargar el conjunto de datos Card
library(AER)          # Para la funciÃ³n ivreg (regresiÃ³n IV)
library(modelsummary)  # Para crear tablas de modelos
library(flextable)     # Para exportar la tabla a Word
library(officer)       # Para trabajar con documentos Word
# Cargar el conjunto de datos Card del paquete wooldridge
data("card", package = "wooldridge")
# Ajuste de la primera etapa: efecto de 'nearc2' sobre 'educ'
modelo_causal <- lm(wage ~ educ + exper + black + south + married + smsa, data = card)
summary(modelo_causal)
modelo_primera_etapa <- lm(educ ~ nearc4 + exper + black + south + married + smsa, data = card)
summary(modelo_primera_etapa)
# Grafico
mean_educ_0 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 0], na.rm = TRUE)
mean_educ_1 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 1], na.rm = TRUE)
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de EducaciÃ³n por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de EducaciÃ³n") +
theme_minimal()
library("raster")
r = raster("C:/Users/felip/Downloads/thetao_ssp585_2020_2100_depthsurf_fab4_0d97_70db_U1756051712162.nc")
install.packages("ncdf4")
r = raster("C:/Users/felip/Downloads/thetao_ssp585_2020_2100_depthsurf_fab4_0d97_70db_U1756051712162.nc")
View(r)
