library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(dat)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + as.numeric(time)]
so_dt[, time := NULL]
View(so_dt)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + time / 24]
so_dt[, time := NULL]
View(so_dt)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + time / 24]
so_dt[, time := NULL]
dimnames(sst)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
sst_dt <- as.data.table(data.table::melt(sst, value.name = "sst"))
setnames(sst_dt, c("lon", "lat", "depth", "time", "sst"))
sst_dt[, date := as.Date("1950-01-01") + time / 24]
sst_dt[, time := NULL]
dimnames(uo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
uo_dt <- as.data.table(data.table::melt(uo, value.name = "uo"))
setnames(uo_dt, c("lon", "lat", "depth", "time", "uo"))
uo_dt[, date := as.Date("1950-01-01") + time / 24]
uo_dt[, time := NULL]
dimnames(vo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
vo_dt <- as.data.table(data.table::melt(vo, value.name = "vo"))
setnames(vo_dt, c("lon", "lat", "depth", "time", "vo"))
vo_dt[, date := as.Date("1950-01-01") + time / 24]
vo_dt[, time := NULL]
View(so_dt)
View(sst_dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth == 0.494025)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth == "0.494025")
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth < 1)
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
select(-c("depth"))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo"))
View(dt)
str(dt)
library(lubridate)
library(stringr)
library(readxl)
# Definir directorios según usuario
usuario <- Sys.info()[["user"]]
# computador <- Sys.info()[["nodename"]]  # Alternativamente puedes usar esto
if (usuario == "felip") {
dirdata <- "C:/Users/felip/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/"
} else if (usuario == "FACEA") {
dirdata <- "C:/Users/FACEA/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/"
} else {
stop("Usuario no reconocido. Defina el directorio correspondiente.")
}
rm(usuario)
#Anchovy and sardine biomass
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
anch_sard_biomass <- anch_sard_biomass[, c(1, 2, 3, 4)]
anch_sard_biomass <- anch_sard_biomass[-1, ]
colnames(anch_sard_biomass) <- c("year", "cruise", "sardine_biomass", "anchoveta_biomass")
anch_sard_biomass <- anch_sard_biomass %>%
filter(str_detect(cruise, "Reclas")) %>%  ## Summer survey!
dplyr::select(-c(cruise)) %>%
mutate(across(ends_with("biomass"), ~as.numeric(.)))
anch_sard_biomass$year <- as.numeric(anch_sard_biomass$year)
#Jurel biomass
jurel_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "JUREL")
jurel_biomass <- jurel_biomass[, c(1, 3)]
jurel_biomass <- jurel_biomass[-1, ]
colnames(jurel_biomass) <- c("year", "jurel_biomass")
jurel_biomass <- jurel_biomass %>%
mutate(across(ends_with("biomass"), ~as.numeric(.))) %>%
mutate(jurel_biomass = ifelse(jurel_biomass == 0, NA, jurel_biomass))
jurel_biomass$year <- as.numeric(jurel_biomass$year)
# Merge databse
biomass <- full_join(anch_sard_biomass, jurel_biomass, by = c("year")) %>% arrange(year)
rm(list = c("anch_sard_biomass", "jurel_biomass"))
View(biomass)
anch_sard_biomass <- read_excel(paste0(dirdata, "IFOP/3. ESTIMACIONES CRUCERO ACUSTICO.xlsx"), sheet = "SARDINA-ANCHOVETA")
View(anch_sard_biomass)
script_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
library(wooldridge)   # Para cargar el conjunto de datos Card
library(AER)          # Para la función ivreg (regresión IV)
data("card", package = "wooldridge")
force(card)
View(card)
modelo_causal <- lm(wage ~ educ + exper + black + south + married + smsa, data = card)
summary(modelo_causal)
modelo_primera_etapa <- lm(educ ~ nearc4 + exper + black + south + married + smsa, data = card)
summary(modelo_primera_etapa)
mean_educ_0 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 0], na.rm = TRUE)
mean_educ_1 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 1], na.rm = TRUE)
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de Educación por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de Educación") +
theme_minimal()
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de Educación por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de Educación") +
theme_minimal()
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de Educación por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de Educación") +
theme_minimal()
library(ggplot2)
################
### IV: 2SLS ###
################
script_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
####
# Minimos cuadrados de dos etapas
####
# Cargar librerías necesarias
library(wooldridge)   # Para cargar el conjunto de datos Card
library(AER)          # Para la función ivreg (regresión IV)
library(modelsummary)  # Para crear tablas de modelos
library(flextable)     # Para exportar la tabla a Word
library(officer)       # Para trabajar con documentos Word
# Cargar el conjunto de datos Card del paquete wooldridge
data("card", package = "wooldridge")
# Ajuste de la primera etapa: efecto de 'nearc2' sobre 'educ'
modelo_causal <- lm(wage ~ educ + exper + black + south + married + smsa, data = card)
summary(modelo_causal)
modelo_primera_etapa <- lm(educ ~ nearc4 + exper + black + south + married + smsa, data = card)
summary(modelo_primera_etapa)
# Grafico
mean_educ_0 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 0], na.rm = TRUE)
mean_educ_1 <- mean(modelo_primera_etapa$model$educ[modelo_primera_etapa$model$nearc4 == 1], na.rm = TRUE)
mean_values <- data.frame(
nearc4 = c(0, 1),
mean_educ = c(mean_educ_0, mean_educ_1)
)
library(ggplot2)
ggplot(mean_values, aes(x = factor(nearc4), y = mean_educ)) +
geom_bar(stat = "identity", fill = "lightblue", color = "blue", width = 0.5) +
labs(title = "Promedio de Educación por Universidad Cercana",
x = "Universidad Cercana (nearc4)",
y = "Promedio de Educación") +
theme_minimal()
library("raster")
r = raster("C:/Users/felip/Downloads/thetao_ssp585_2020_2100_depthsurf_fab4_0d97_70db_U1756051712162.nc")
install.packages("ncdf4")
r = raster("C:/Users/felip/Downloads/thetao_ssp585_2020_2100_depthsurf_fab4_0d97_70db_U1756051712162.nc")
View(r)
dt[, `:=`(
year  = year(date),
month = month(date)
)]
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo")) %>%
mutate(bad_weather = ifelse(current_speed > 1))
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo")) %>%
mutate(bad_weather = ifelse(current_speed > 1, 1, 0))
View(dt)
library(dplyr)
library(ncdf4)
library(data.table)
library(lubridate)
f <- "C:\Users\felip\OneDrive - Universidad de Concepción\FONDECYT Iniciacion\Data\Environmental\cmems_mod_glo_phy_my_0.083deg_P1D-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-30.nc"
library(dplyr)
library(ncdf4)
library(data.table)
library(lubridate)
f <- "C:/Users/felip/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/Environmental/cmems_mod_glo_phy_my_0.083deg_P1D-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-30.nc"
nc <- ncdf4::nc_open(f)
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
View(nc)
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
ncdf4::nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
View(so_dt)
View(so_dt)
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + time / 24]
so_dt[, time := NULL]
dimnames(sst)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
sst_dt <- as.data.table(data.table::melt(sst, value.name = "sst"))
setnames(sst_dt, c("lon", "lat", "depth", "time", "sst"))
sst_dt[, date := as.Date("1950-01-01") + time / 24]
sst_dt[, time := NULL]
dimnames(uo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
uo_dt <- as.data.table(data.table::melt(uo, value.name = "uo"))
setnames(uo_dt, c("lon", "lat", "depth", "time", "uo"))
uo_dt[, date := as.Date("1950-01-01") + time / 24]
uo_dt[, time := NULL]
dimnames(vo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
vo_dt <- as.data.table(data.table::melt(vo, value.name = "vo"))
setnames(vo_dt, c("lon", "lat", "depth", "time", "vo"))
vo_dt[, date := as.Date("1950-01-01") + time / 24]
vo_dt[, time := NULL]
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo")) %>%
mutate(bad_weather = ifelse(current_speed > 1, 1, 0))
dt[, `:=`(
year  = year(date),
month = month(date)
)]
View(dt)
dt <- dt %>%
select(-c("bad_weather"))
saveRDS(df, file = "data\env\glorys_daily_data.rds")
saveRDS(df, file = "data/env/glorys_daily_data.rds")
saveRDS(df, file = "data/env/glorysDaily_2012_2021.rds")
###----------------------------------------------###
###           Environmental covariates           ###
###----------------------------------------------###
library(dplyr)
library(ncdf4)
library(data.table)
library(lubridate)
options(download.file.method = "wininet")
devtools::install_github("noaa-nwfsc/FishSET")
install.packages("pak")
pak::pak("noaa-nwfsc/FishSET")
install.packages("pak")
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
library(ggplot2)
#---------------------------------
# Load dataset
#---------------------------------
usuario <- Sys.info()[["user"]]
dirdata <- paste0("C:/Users/", usuario,
"/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/")
env_dt <- readRDS("data/env/EnvMergedDaily_2012_2025_0.125deg.rds")
#---------------------------------
# Unique grid cells
#---------------------------------
grid_coords <- env_dt %>%
select(lon, lat) %>%
distinct()
# Convert to sf and keep lon/lat
grid_sf <- st_as_sf(grid_coords, coords = c("lon", "lat"), crs = 4326) %>%
mutate(lon = st_coordinates(.)[,1],
lat = st_coordinates(.)[,2])
# Transform to projected CRS (meters)
grid_sf <- st_transform(grid_sf, 6933)
#---------------------------------
# Coastline
#---------------------------------
land <- ne_countries(scale = "medium", returnclass = "sf")
coastline <- st_union(st_geometry(land)) |> st_transform(6933)
#---------------------------------
# Remove land points
#---------------------------------
inside_land <- st_intersects(grid_sf, coastline, sparse = FALSE)[,1]
grid_sf <- grid_sf[!inside_land, ]
#---------------------------------
# Distance to coast (m)
#---------------------------------
grid_sf$dist2coast <- st_distance(grid_sf, coastline) |> as.numeric()
#---------------------------------
# Maximum distance by latitude
#---------------------------------
grid_dt <- st_drop_geometry(grid_sf)
max_dist_by_lat <- grid_dt %>%
group_by(lat) %>%
summarise(max_dist = max(dist2coast, na.rm = TRUE)) %>%
arrange(lat)
# Minimum of those maxima (narrowest width of ocean band)
min_maxdist <- min(max_dist_by_lat$max_dist, na.rm = TRUE)
cat("Minimum of the maximum distances (km):",
round(min_maxdist / 1000, 2), "\n")
pak::pak("noaa-nwfsc/FishSET")
###----------------------------------------------###
###              Logbook data                   ###
###----------------------------------------------###
rm(list = ls())
gc()
# Define directory
usuario <- Sys.info()[["user"]]
# computador <- Sys.info()[["nodename"]]  # Alternativamente puedes usar esto
if (usuario == "felip") {
dirdata <- "C:/Users/felip/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/"
} else if (usuario == "FACEA") {
dirdata <- "C:/Users/FACEA/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/"
} else {
stop("Usuario no reconocido. Defina el directorio correspondiente.")
}
rm(usuario)
# Load packages
library(readxl)
library(tidyverse)
# library(knitr)
# library(kableExtra)
# library(ggalluvial)
# library(purrr)
# library(stringr)
# library(readxl)
### Load logbooks information for central-south Chile
logbooks <-
read_excel(paste0(dirdata, "IFOP/1. BITACORA CENTRO SUR.xlsx"),
sheet = "bIt_2001_2024_comercial") %>%
filter(REGION %in% c(5,6,7,8,9,10,14,16))
### Get species name in logbooks
species <-
read_excel(
paste0(dirdata, "IFOP/1. BITACORA CENTRO SUR.xlsx"),
sheet = "PESQUERIAS_MAESTRO_ESPECIE") %>%
dplyr::select(c('COD_ESPECIE', 'NOMBRE_ESPECIE'))
logbooks <- left_join(logbooks, species, by = "COD_ESPECIE")
logbooks$year <- year(logbooks$FECHA_HORA_RECALADA)
logbooks$month <- month(logbooks$FECHA_HORA_RECALADA)
rm(list = c("species"))
View(logbooks)
logbooks_filtered <- logbooks %>% dplyr::filter(year > 2011)
View(logbooks_filtered)
logbooks_filtered <- logbooks %>% dplyr::filter(year > 2011) %>%
dplyr::filter(NOMBRE_ESPECIE %in% C("SARDINA COMUN", "JUREL", "ANCHOVETA"))
logbooks_filtered <- logbooks %>% dplyr::filter(year > 2011) %>%
dplyr::filter(NOMBRE_ESPECIE %in% c("SARDINA COMUN", "JUREL", "ANCHOVETA"))
View(logbooks_filtered)
View(logbooks_filtered)
logbooks_filtered <- logbooks %>% dplyr::filter(year > 2011) %>%
dplyr::filter(NOMBRE_ESPECIE %in% c("JUREL")) %>%
group_by(LATITUDE) %>%
summarize(mean_long = mean(LONGITUD, na.rm = TRUE))
logbooks_filtered <- logbooks %>% dplyr::filter(year > 2011) %>%
dplyr::filter(NOMBRE_ESPECIE %in% c("JUREL")) %>%
group_by(LATITUD) %>%
summarize(mean_long = mean(LONGITUD, na.rm = TRUE))
View(logbooks_filtered)
logbooks_filtered <- logbooks %>%
filter(year > 2011) %>%
filter(NOMBRE_ESPECIE %in% c("JUREL")) %>%
group_by(LATITUD) %>%
summarize(mean_long = mean(LONGITUD, na.rm = TRUE)) %>%
arrange(LATITUD)  # Ordena por latitud ascendente
# Ejemplo de plot
ggplot(logbooks_filtered, aes(x = LATITUD, y = mean_long)) +
geom_point() +
geom_line()
ggplot(logbooks_filtered, aes(x = LATITUD, y = mean_long)) +
geom_line()
data <- read.csv("C:/Users/FACEA/Downloads/actividad_agricola.csv")
View(data)
data <- read.csv("C:/Users/FACEA/Downloads/actividad_agricola.csv", sep = ";")
View(data)
data <- read.csv("C:/Users/FACEA/Downloads/seccion_15_hogar.csv", sep = ";")
View(data)
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
library(ggplot2)
#------------------------
###----------------------------------------------###
###   Environmental data: distance to coast      ###
###----------------------------------------------###
rm(list = ls())
gc()
library(dplyr)
library(data.table)
library(lubridate)
library(sf)
library(rnaturalearth)
library(ggplot2)
#---------------------------------
# Load dataset
#---------------------------------
usuario <- Sys.info()[["user"]]
dirdata <- paste0("C:/Users/", usuario,
"/OneDrive - Universidad de Concepción/FONDECYT Iniciacion/Data/")
env_coast_dt <- readRDS("data/env/EnvCoastDaily_2012_2025_0.125deg.rds")
