df <- as.data.frame(r, xy = TRUE, cells = FALSE, na.rm = FALSE)
# How many cells in one layer?
n_cells <- ncell(r)
# Repeat each time for each cell
df$time <- rep(time, each = n_cells)
df$time <- rep(time,)
# Convert raster to data.frame (long/tidy format)
df <- as.data.frame(r, xy = TRUE, cells = FALSE, na.rm = FALSE)
# How many cells in one layer?
n_cells <- ncell(r)
# Repeat each time for each cell
df$time <- rep(time, each = n_cells)
r <- rast(f)
names(r)
time <- terra::time(r)
df <- as.data.frame(r, xy=TRUE, cells=TRUE, all=TRUE, na.rm=FALSE) %>%
pivot_longer(
cols = -c(x, y, cell),
names_to = "layer",
values_to = "value"
) %>%
mutate(
# Each layer corresponds to a time step, repeated for each variable
time = time[terra::layerFromName(r, layer)],
variable = gsub("_[0-9]+$", "", layer)  # strip the "_1", "_2" etc.
) %>%
select(x, y, time, variable, value)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
r <- rast(f)
# Extract time stamps
time <- terra::time(r)
time <- as.data.frame(terra::time(r))
View(time)
df <- as.data.frame(r, xy = TRUE, cells = TRUE, all = TRUE, na.rm = FALSE)
View(df)
# Reshape to long (layer-by-layer)
df_long <- df %>%
pivot_longer(
cols = -c(x, y, cell),
names_to = "layer",
values_to = "value"
)
View(df_long)
df_long <- df %>%
pivot_longer(
cols = -c(x, y, cell),
names_to = "layer",
values_to = "value"
) %>%
mutate(
variable = str_replace(layer, "_[0-9]+$", ""),         # variable name
time_idx = as.integer(str_extract(layer, "[0-9]+$")),  # layer index
time = time[time_idx]
)
time <- as.data.frame(terra::time(r))
time <- terra::time(r)
# Reshape to long (layer-by-layer)
df_long <- df %>%
pivot_longer(
cols = -c(x, y, cell),
names_to = "layer",
values_to = "value"
) %>%
mutate(
variable = str_replace(layer, "_[0-9]+$", ""),         # variable name
time_idx = as.integer(str_extract(layer, "[0-9]+$")),  # layer index
time = time[time_idx]
)
View(df_long)
df_long <- df %>%
pivot_longer(
cols = -c(x, y, cell),
names_to = "layer",
values_to = "value"
) %>%
mutate(
variable = str_replace(layer, "_[0-9]+$", ""),         # variable name
time_idx = as.integer(str_extract(layer, "[0-9]+$")),  # layer index
time = time
)
# Read as a dataset: one SpatRaster per variable
sds <- terra::sds(f)
vars <- names(sds)
View(sds)
nc <- ncdf4::nc_open(f)
depth_name <- intersect(c("depth","deptht","z","lev","st_ocean"), names(nc$dim))[1]
depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
ncdf4::nc_close(nc)
make_df_var <- function(rr, varname) {
t <- terra::time(rr)              # vector of timestamps (length = n_times)
nL <- terra::nlyr(rr)             # total layers = n_times * n_depths
nT <- length(t)
nD <- nL / nT                     # number of depth levels
stopifnot(nD == round(nD))        # sanity check
as.data.frame(rr, xy = TRUE, cells = TRUE, all = TRUE, na.rm = FALSE) |>
pivot_longer(-c(x, y, cell), names_to = "layer", values_to = "value") |>
mutate(
layer_idx = as.integer(str_extract(layer, "[0-9]+$")),
# depth varies fastest in CMEMS: 1..nD for each time
time_idx  = ((layer_idx - 1) %/% nD) + 1,
depth_idx = ((layer_idx - 1) %%  nD) + 1,
time  = t[time_idx],
depth = if (!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx,
variable = varname
) |>
select(x, y, time, depth, variable, value)
}
df_long <- bind_rows(lapply(vars, function(v) make_df_var(sds[[v]], v)))
View(df_long)
df_wide <- df_long |>
pivot_wider(names_from = variable, values_from = value) |>
arrange(time, depth, y, x)
df_wide <- df_long |>
pivot_wider(names_from = variable, values_from = value) |>
arrange(time, depth, y, x)
View(df_wide)
print(df_wide, n = 5)
df_wide <- df_long |>
tidyr::pivot_wider(
names_from = variable,
values_from = value
) |>
arrange(time, depth, y, x)
print(df_wide, n = 5)
gc()
library(terra)
library(dplyr)
library(tidyr)
library(stringr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
# open as subdatasets: one SpatRaster per variable
sds <- terra::sds(f)
vars <- names(sds)
# get time and depth info
nc <- ncdf4::nc_open(f)
time <- terra::time(sds[[1]])  # same across vars
depth_name <- intersect(c("depth","deptht","z","lev","st_ocean"), names(nc$dim))[1]
depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
ncdf4::nc_close(nc)
# helper for one variable
make_df_var <- function(rr, varname) {
nL <- terra::nlyr(rr)
nT <- length(time)
nD <- nL / nT
stopifnot(nD == round(nD))
df <- as.data.frame(rr, xy = TRUE, cells = TRUE, all = TRUE, na.rm = FALSE) %>%
pivot_longer(-c(x, y, cell), names_to = "layer", values_to = "value") %>%
mutate(
layer_idx = as.integer(str_extract(layer, "[0-9]+$")),
time_idx  = ((layer_idx - 1) %/% nD) + 1,
depth_idx = ((layer_idx - 1) %%  nD) + 1,
time  = time[time_idx],
depth = if (!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
) %>%
select(x, y, time, depth, value) %>%
rename(!!varname := value)   # name the column after the variable
return(df)
}
# build for all variables
df_list <- lapply(seq_along(vars), function(i) make_df_var(sds[[i]], vars[i]))
# join them on (x, y, time, depth)
df_wide <- df_list %>%
reduce(full_join, by = c("x","y","time","depth"))
head(df_wide)
View(df_wide)
library(terra)
library(dplyr)
library(tidyr)
library(stringr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
# load as a stack of all variables
r <- rast(f)
time <- terra::time(r)
# Get depth levels from NetCDF
nc <- ncdf4::nc_open(f)
depth_name <- intersect(c("depth","deptht","z","lev","st_ocean"), names(nc$dim))[1]
depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
ncdf4::nc_close(nc)
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, long=TRUE, na.rm=FALSE)
View(df_long)
nT <- length(time)
nD <- nlayers(r) / nT
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
# load as a stack of all variables
r <- rast(f)
# Extract time
time <- terra::time(r)
# Get depth levels from NetCDF
nc <- ncdf4::nc_open(f)
depth_name <- intersect(c("depth","deptht","z","lev","st_ocean"), names(nc$dim))[1]
depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
ncdf4::nc_close(nc)
# Directly convert to long format (no duplicate pivoting!)
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, long=TRUE, na.rm=FALSE)
# map layer index -> time + depth
nT <- length(time)
nD <- nlayers(r) / nT
time <- terra::time(r)
# Get depth levels from NetCDF
nc <- ncdf4::nc_open(f)
depth_name <- intersect(c("depth","deptht","z","lev","st_ocean"), names(nc$dim))[1]
depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
ncdf4::nc_close(nc)
# Convert to long format directly
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, long=TRUE, na.rm=FALSE)
# Number of time steps and depth layers
nT <- length(time)
nD <- nlyr(r) / nT   # terra equivalent of raster::nlayers
df_long <- df_long %>%
mutate(
time_idx  = ((lyr - 1) %/% nD) + 1,
depth_idx = ((lyr - 1) %%  nD) + 1,
time  = time[time_idx],
depth = if (!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
)
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
# Load the raster stack
r <- rast(f)
# Extract time
time <- terra::time(r)
# Get depth levels and variable information from NetCDF
nc <- ncdf4::nc_open(f)
depth_name <- intersect(c("depth","deptht","z","lev","st_ocean"), names(nc$dim))[1]
depth_vals <- if (!is.na(depth_name)) ncdf4::ncvar_get(nc, depth_name) else NA
var_names <- names(nc$var)
ncdf4::nc_close(nc)
cat("Number of layers:", nlyr(r), "\n")
cat("Time steps:", length(time), "\n")
cat("Depth values:", if(!anyNA(depth_vals)) length(depth_vals) else "Not found", "\n")
# Convert to long format
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, long=TRUE, na.rm=FALSE)
View(df_long)
n_vars <- length(var_names)
n_depth_layers <- if(!anyNA(depth_vals)) length(depth_vals) else 1
n_layers_per_time <- n_vars * n_depth_layers
df_long <- df_long %>%
mutate(
time_idx = ceiling(lyr / n_layers_per_time),
var_depth_idx = ((lyr - 1) %% n_layers_per_time) + 1,
var_idx = ceiling(var_depth_idx / n_depth_layers),
depth_idx = ((var_depth_idx - 1) %% n_depth_layers) + 1,
time = time[time_idx],
variable = if(length(var_names) > 0) var_names[var_idx] else paste0("var", var_idx),
depth = if(!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
)
df_long <- df_long %>%
mutate(
time_idx = ceiling(lyr / n_layers_per_time),
var_depth_idx = ((lyr - 1) %% n_layers_per_time) + 1,
var_idx = ceiling(var_depth_idx / n_depth_layers),
depth_idx = ((var_depth_idx - 1) %% n_depth_layers) + 1,
time = time[time_idx],
variable = if(length(var_names) > 0) var_names[var_idx] else paste0("var", var_idx),
depth = if(!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
) %>%
select(-var_depth_idx, -var_idx, -depth_idx)
# Convert to long format - this creates a 'layer' column instead of 'lyr'
df_long <- as.data.frame(r, xy=TRUE, cells=TRUE, na.rm=FALSE) %>%
tidyr::pivot_longer(
cols = -c(cell, x, y),
names_to = "layer",
values_to = "value"
)
View(df_long)
# Calculate the correct number of depth layers per time step
# This depends on how many variables are in your NetCDF
n_vars <- length(var_names)
n_depth_layers <- if(!anyNA(depth_vals)) length(depth_vals) else 1
n_layers_per_time <- n_vars * n_depth_layers
df_long <- df_long %>%
mutate(
layer_num = as.numeric(gsub(".*_(\\d+)$", "\\1", layer)),
time_idx = ceiling(layer_num / n_layers_per_time),
var_depth_idx = ((layer_num - 1) %% n_layers_per_time) + 1,
var_idx = ceiling(var_depth_idx / n_depth_layers),
depth_idx = ((var_depth_idx - 1) %% n_depth_layers) + 1,
time = time[time_idx],
variable = if(length(var_names) > 0) var_names[var_idx] else paste0("var", var_idx),
depth = if(!anyNA(depth_vals)) depth_vals[depth_idx] else depth_idx
) %>%
select(-var_depth_idx, -var_idx, -depth_idx, -layer_num)
View(df_long)
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
View(nc)
var_names <- names(nc$var)
lon <- ncvar_get(nc, "lon")
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
var_names <- names(nc$var)
lon <- ncvar_get(nc, "lon")
tim <- ncvar_get(nc, "depth")
depth <- ncvar_get(nc, "depth")
lon <- ncvar_get(nc, "lon")
View(nc)
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(dat, "so")
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(dat)
tim <- ncvar_get(nc, "time")
library(terra)
library(dplyr)
library(ncdf4)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
Dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
library(data.table)
Dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
View(so_dt)
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1900-01-01") + as.numeric(time)]
View(nc)
so_dt[, date := as.Date("1950-01-01") + as.numeric(time)]
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(dat)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + as.numeric(time)]
so_dt[, time := NULL]
View(so_dt)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + time / 24]
so_dt[, time := NULL]
View(so_dt)
library(terra)
library(dplyr)
library(ncdf4)
library(data.table)
f <- "C:/GitHub/Impact of Environment on Harvest/data/env/cmems_mod_glo_phy_my_0.083deg_P1M-m_so-thetao-uo-vo_78.00W-71.50W_42.00S-32.00S_0.49-1.54m_2012-01-01-2021-06-01.nc"
nc <- ncdf4::nc_open(f)
## Dimensions ##
lon <- ncvar_get(nc, "longitude")
lat <- ncvar_get(nc, "latitude")
tim <- ncvar_get(nc, "time")
dep <- ncvar_get(nc, "depth")
## Vars ##
var_names <- names(nc$var)
so <- ncvar_get(nc, "so")
sst <- ncvar_get(nc, "thetao")
uo <- ncvar_get(nc, "uo")
vo <- ncvar_get(nc, "vo")
nc_close(nc)
dimnames(so)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
so_dt <- as.data.table(data.table::melt(so, value.name = "so"))
setnames(so_dt, c("lon", "lat", "depth", "time", "so"))
so_dt[, date := as.Date("1950-01-01") + time / 24]
so_dt[, time := NULL]
dimnames(sst)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
sst_dt <- as.data.table(data.table::melt(sst, value.name = "sst"))
setnames(sst_dt, c("lon", "lat", "depth", "time", "sst"))
sst_dt[, date := as.Date("1950-01-01") + time / 24]
sst_dt[, time := NULL]
dimnames(uo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
uo_dt <- as.data.table(data.table::melt(uo, value.name = "uo"))
setnames(uo_dt, c("lon", "lat", "depth", "time", "uo"))
uo_dt[, date := as.Date("1950-01-01") + time / 24]
uo_dt[, time := NULL]
dimnames(vo)  <- list(lon = lon, lat = lat, dep = dep, time = tim)
vo_dt <- as.data.table(data.table::melt(vo, value.name = "vo"))
setnames(vo_dt, c("lon", "lat", "depth", "time", "vo"))
vo_dt[, date := as.Date("1950-01-01") + time / 24]
vo_dt[, time := NULL]
View(so_dt)
View(sst_dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth == 0.494025)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth == "0.494025")
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>% filter(depth < 1)
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
select(-c("depth"))
View(dt)
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo"))
View(dt)
str(dt)
library(lubridate)
dt[, `:=`(
year  = year(date),
month = month(date)
)]
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo")) %>%
mutate(bad_weather = ifelse(current_speed > 1))
dt <- Reduce(function(x, y) merge(x, y, by = c("lon", "lat", "depth", "date")),
list(so_dt, sst_dt, uo_dt, vo_dt)) %>%
filter(depth < 1) %>%
mutate(current_speed = sqrt(uo^2 + vo^2),
current_direction = atan2(vo, uo) * 180 / pi) %>%
select(-c("depth", "uo", "vo")) %>%
mutate(bad_weather = ifelse(current_speed > 1, 1, 0))
View(dt)
